{
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix resync softlockup when bitmap size is less than array size\n\nIs is reported that for dm-raid10, lvextend + lvchange --syncaction will\ntrigger following softlockup:\n\nkernel:watchdog: BUG: soft lockup - CPU#3 stuck for 26s! [mdX_resync:6976]\nCPU: 7 PID: 3588 Comm: mdX_resync Kdump: loaded Not tainted 6.9.0-rc4-next-20240419 #1\nRIP: 0010:_raw_spin_unlock_irq+0x13/0x30\nCall Trace:\n <TASK>\n md_bitmap_start_sync+0x6b/0xf0\n raid10_sync_request+0x25c/0x1b40 [raid10]\n md_do_sync+0x64b/0x1020\n md_thread+0xa7/0x170\n kthread+0xcf/0x100\n ret_from_fork+0x30/0x50\n ret_from_fork_asm+0x1a/0x30\n\nAnd the detailed process is as follows:\n\nmd_do_sync\n j = mddev->resync_min\n while (j < max_sectors)\n  sectors = raid10_sync_request(mddev, j, &skipped)\n   if (!md_bitmap_start_sync(..., &sync_blocks))\n    // md_bitmap_start_sync set sync_blocks to 0\n    return sync_blocks + sectors_skippe;\n  // sectors = 0;\n  j += sectors;\n  // j never change\n\nRoot cause is that commit 301867b1c168 (\"md/raid10: check\nslab-out-of-bounds in md_bitmap_get_counter\") return early from\nmd_bitmap_get_counter(), without setting returned blocks.\n\nFix this problem by always set returned blocks from\nmd_bitmap_get_counter\"(), as it used to be.\n\nNoted that this patch just fix the softlockup problem in kernel, the\ncase that bitmap size doesn't match array size still need to be fixed.",
  "id": "CVE-2024-38598",
  "modified": "2025-08-09T19:01:26Z",
  "published": "2024-06-19T14:15:19Z",
  "references": [
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/3f5b73ef8fd6268cbc968b308d8eafe56fda97f3"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/43771597feba89a839c5f893716df88ae5c237ce"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/5817f43ae1a118855676f57ef7ab50e37eac7482"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/69296914bfd508c85935bf5f711cad9b0fe78492"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/71e8e4f288e74a896b6d9cd194f3bab12bd7a10f"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/8bbc71315e0ae4bb7e37f8d43b915e1cb01a481b"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/c9566b812c8f66160466cc1e29df6d3646add0b1"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/d4b9c764d48fa41caa24cfb4275f3aa9fb4bd798"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/f0e729af2eb6bee9eb58c4df1087f14ebaefe26b"
    }
  ],
  "related": [
    "MGASA-2024-0263",
    "MGASA-2024-0266",
    "RLSA-2024:5101",
    "RXSA-2024:5101",
    "SUSE-SU-2024:2493-1",
    "SUSE-SU-2024:2561-1",
    "SUSE-SU-2024:2802-1",
    "SUSE-SU-2024:2894-1",
    "SUSE-SU-2024:2896-1",
    "SUSE-SU-2024:2901-1",
    "SUSE-SU-2024:2939-1",
    "SUSE-SU-2024:2947-1",
    "SUSE-SU-2024:2973-1"
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
      "type": "CVSS_V3"
    }
  ]
}