{
  "affected": [
    {
      "database_specific": {
        "source": "https://repo.openeuler.org/security/data/osv/OESA-2021-1203.json"
      },
      "ecosystem_specific": {
        "aarch64": [
          "rubygem-puma-3.12.6-2.oe1.aarch64.rpm",
          "rubygem-puma-debugsource-3.12.6-2.oe1.aarch64.rpm",
          "rubygem-puma-debuginfo-3.12.6-2.oe1.aarch64.rpm"
        ],
        "noarch": [
          "rubygem-puma-doc-3.12.6-2.oe1.noarch.rpm"
        ],
        "src": [
          "rubygem-puma-3.12.6-2.oe1.src.rpm"
        ],
        "x86_64": [
          "rubygem-puma-debugsource-3.12.6-2.oe1.x86_64.rpm",
          "rubygem-puma-3.12.6-2.oe1.x86_64.rpm",
          "rubygem-puma-debuginfo-3.12.6-2.oe1.x86_64.rpm"
        ]
      },
      "package": {
        "ecosystem": "openEuler:20.03-LTS-SP1",
        "name": "rubygem-puma",
        "purl": "pkg:rpm/openEuler/rubygem-puma&distro=openEuler-20.03-LTS-SP1"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "3.12.6-2.oe1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "database_specific": {
    "severity": "High"
  },
  "details": "A simple, fast, threaded, and highly concurrent HTTP 1.1 server for Ruby/Rack applications.\r\n\r\nSecurity Fix(es):\r\n\r\nPuma is a concurrent HTTP 1.1 server for Ruby/Rack applications. The fix for CVE-2019-16770 was incomplete. The original fix only protected existing connections that had already been accepted from having their requests starved by greedy persistent-connections saturating all threads in the same process. However, new connections may still be starved by greedy persistent-connections saturating all threads in all processes in the cluster. A `puma` server which received more concurrent `keep-alive` connections than the server had threads in its threadpool would service only a subset of connections, denying service to the unserved connections. This problem has been fixed in `puma` 4.3.8 and 5.3.1. Setting `queue_requests False` also fixes the issue. This is not advised when using `puma` without a reverse proxy, such as `nginx` or `apache`, because you will open yourself to slow client attacks (e.g. slowloris). The fix is very small and a git patch is available for those using unsupported versions of Puma.(CVE-2021-29509)",
  "id": "OESA-2021-1203",
  "modified": "2025-09-03T06:17:22.520181Z",
  "published": "2021-06-07T11:02:55Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1203"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29509"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "rubygem-puma security update",
  "upstream": [
    "CVE-2021-29509"
  ]
}