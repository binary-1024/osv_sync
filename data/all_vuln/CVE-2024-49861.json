{
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix helper writes to read-only maps\n\nLonial found an issue that despite user- and BPF-side frozen BPF map\n(like in case of .rodata), it was still possible to write into it from\na BPF program side through specific helpers having ARG_PTR_TO_{LONG,INT}\nas arguments.\n\nIn check_func_arg() when the argument is as mentioned, the meta->raw_mode\nis never set. Later, check_helper_mem_access(), under the case of\nPTR_TO_MAP_VALUE as register base type, it assumes BPF_READ for the\nsubsequent call to check_map_access_type() and given the BPF map is\nread-only it succeeds.\n\nThe helpers really need to be annotated as ARG_PTR_TO_{LONG,INT} | MEM_UNINIT\nwhen results are written into them as opposed to read out of them. The\nlatter indicates that it's okay to pass a pointer to uninitialized memory\nas the memory is written to anyway.\n\nHowever, ARG_PTR_TO_{LONG,INT} is a special case of ARG_PTR_TO_FIXED_SIZE_MEM\njust with additional alignment requirement. So it is better to just get\nrid of the ARG_PTR_TO_{LONG,INT} special cases altogether and reuse the\nfixed size memory types. For this, add MEM_ALIGNED to additionally ensure\nalignment given these helpers write directly into the args via *<ptr> = val.\nThe .arg*_size has been initialized reflecting the actual sizeof(*<ptr>).\n\nMEM_ALIGNED can only be used in combination with MEM_FIXED_SIZE annotated\nargument types, since in !MEM_FIXED_SIZE cases the verifier does not know\nthe buffer size a priori and therefore cannot blindly write *<ptr> = val.",
  "id": "CVE-2024-49861",
  "modified": "2025-08-09T19:01:28Z",
  "published": "2024-10-21T13:15:06Z",
  "references": [
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/1e75d25133158b525e0456876e9bcfd6b2993fd5"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/2ed98ee02d1e08afee88f54baec39ea78dc8a23c"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/32556ce93bc45c730829083cb60f95a2728ea48b"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/a2c8dc7e21803257e762b0bf067fd13e9c995da0"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/988e55abcf7fdb8fc9a76a7cf3f4e939a4d4fb3a"
    }
  ],
  "related": [
    "MGASA-2024-0344",
    "MGASA-2024-0345",
    "SUSE-SU-2024:3984-1",
    "SUSE-SU-2024:3986-1",
    "SUSE-SU-2024:4315-1",
    "SUSE-SU-2024:4318-1",
    "SUSE-SU-2024:4364-1",
    "SUSE-SU-2024:4376-1",
    "SUSE-SU-2024:4387-1",
    "SUSE-SU-2025:02846-1",
    "SUSE-SU-2025:02923-1",
    "SUSE-SU-2025:02969-1",
    "USN-7276-1",
    "USN-7277-1",
    "openSUSE-SU-2024:14500-1",
    "openSUSE-SU-2025:14705-1"
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H",
      "type": "CVSS_V3"
    }
  ]
}