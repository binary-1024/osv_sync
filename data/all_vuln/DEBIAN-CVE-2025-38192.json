{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-38192.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.35-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-38192.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.35-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  net: clear the dst when changing skb protocol  A not-so-careful NAT46 BPF program can crash the kernel if it indiscriminately flips ingress packets from v4 to v6:    BUG: kernel NULL pointer dereference, address: 0000000000000000     ip6_rcv_core (net/ipv6/ip6_input.c:190:20)     ipv6_rcv (net/ipv6/ip6_input.c:306:8)     process_backlog (net/core/dev.c:6186:4)     napi_poll (net/core/dev.c:6906:9)     net_rx_action (net/core/dev.c:7028:13)     do_softirq (kernel/softirq.c:462:3)     netif_rx (net/core/dev.c:5326:3)     dev_loopback_xmit (net/core/dev.c:4015:2)     ip_mc_finish_output (net/ipv4/ip_output.c:363:8)     NF_HOOK (./include/linux/netfilter.h:314:9)     ip_mc_output (net/ipv4/ip_output.c:400:5)     dst_output (./include/net/dst.h:459:9)     ip_local_out (net/ipv4/ip_output.c:130:9)     ip_send_skb (net/ipv4/ip_output.c:1496:8)     udp_send_skb (net/ipv4/udp.c:1040:8)     udp_sendmsg (net/ipv4/udp.c:1328:10)  The output interface has a 4->6 program attached at ingress. We try to loop the multicast skb back to the sending socket. Ingress BPF runs as part of netif_rx(), pushes a valid v6 hdr and changes skb->protocol to v6. We enter ip6_rcv_core which tries to use skb_dst(). But the dst is still an IPv4 one left after IPv4 mcast output.  Clear the dst in all BPF helpers which change the protocol. Try to preserve metadata dsts, those may carry non-routing metadata.",
  "id": "DEBIAN-CVE-2025-38192",
  "modified": "2025-09-24T00:04:05Z",
  "published": "2025-07-04T14:15:26Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2025-38192"
    }
  ],
  "schema_version": "1.7.3"
}