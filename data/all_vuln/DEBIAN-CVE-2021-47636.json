{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2021-47636.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:11",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.10.113-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "5.10.103-1",
        "5.10.103-1~bpo10+1",
        "5.10.106-1",
        "5.10.46-4",
        "5.10.46-5",
        "5.10.70-1",
        "5.10.70-1~bpo10+1",
        "5.10.84-1",
        "5.10.92-1",
        "5.10.92-1~bpo10+1",
        "5.10.92-2"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2021-47636.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.17.3-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2021-47636.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.17.3-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2021-47636.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.17.3-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  ubifs: Fix read out-of-bounds in ubifs_wbuf_write_nolock()  Function ubifs_wbuf_write_nolock() may access buf out of bounds in following process:  ubifs_wbuf_write_nolock():   aligned_len = ALIGN(len, 8);   // Assume len = 4089, aligned_len = 4096   if (aligned_len <= wbuf->avail) ... // Not satisfy   if (wbuf->used) {     ubifs_leb_write()  // Fill some data in avail wbuf     len -= wbuf->avail;   // len is still not 8-bytes aligned     aligned_len -= wbuf->avail;   }   n = aligned_len >> c->max_write_shift;   if (n) {     n <<= c->max_write_shift;     err = ubifs_leb_write(c, wbuf->lnum, buf + written,                           wbuf->offs, n);     // n > len, read out of bounds less than 8(n-len) bytes   }  , which can be catched by KASAN:   =========================================================   BUG: KASAN: slab-out-of-bounds in ecc_sw_hamming_calculate+0x1dc/0x7d0   Read of size 4 at addr ffff888105594ff8 by task kworker/u8:4/128   Workqueue: writeback wb_workfn (flush-ubifs_0_0)   Call Trace:     kasan_report.cold+0x81/0x165     nand_write_page_swecc+0xa9/0x160     ubifs_leb_write+0xf2/0x1b0 [ubifs]     ubifs_wbuf_write_nolock+0x421/0x12c0 [ubifs]     write_head+0xdc/0x1c0 [ubifs]     ubifs_jnl_write_inode+0x627/0x960 [ubifs]     wb_workfn+0x8af/0xb80  Function ubifs_wbuf_write_nolock() accepts that parameter 'len' is not 8 bytes aligned, the 'len' represents the true length of buf (which is allocated in 'ubifs_jnl_xxx', eg. ubifs_jnl_write_inode), so ubifs_wbuf_write_nolock() must handle the length read from 'buf' carefully to write leb safely.  Fetch a reproducer in [Link].",
  "id": "DEBIAN-CVE-2021-47636",
  "modified": "2025-09-30T05:16:43.204578Z",
  "published": "2025-02-26T06:37:05Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2021-47636"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H",
      "type": "CVSS_V3"
    }
  ],
  "upstream": [
    "CVE-2021-47636"
  ]
}