{
  "affected": [
    {
      "database_specific": {
        "source": "https://repo.openeuler.org/security/data/osv/OESA-2021-1257.json"
      },
      "ecosystem_specific": {
        "aarch64": [
          "python3-pyyaml-5.3.1-4.oe1.aarch64.rpm",
          "pyyaml-debuginfo-5.3.1-4.oe1.aarch64.rpm",
          "pyyaml-debugsource-5.3.1-4.oe1.aarch64.rpm"
        ],
        "src": [
          "pyyaml-5.3.1-4.oe1.src.rpm"
        ],
        "x86_64": [
          "pyyaml-debuginfo-5.3.1-4.oe1.x86_64.rpm",
          "python3-pyyaml-5.3.1-4.oe1.x86_64.rpm",
          "pyyaml-debugsource-5.3.1-4.oe1.x86_64.rpm"
        ]
      },
      "package": {
        "ecosystem": "openEuler:20.03-LTS-SP1",
        "name": "PyYAML",
        "purl": "pkg:rpm/openEuler/PyYAML&distro=openEuler-20.03-LTS-SP1"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "pyyaml-5.3.1-4.oe1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "database_specific": {
    "severity": "Critical"
  },
  "details": "YAML is a data serialization format designed for human readability and interaction with scripting languages. PyYAML is a YAML parser and emitter for Python.\nPyYAML features a complete YAML 1.1 parser, Unicode support, pickle support, capable extension API, and sensible error messages. PyYAML supports standard YAML tags and provides Python-specific tags that allow to represent an arbitrary Python object.\nPyYAML is applicable for a broad range of tasks from complex configuration files to object serialization and persistence.\r\n\r\nSecurity Fix(es):\r\n\r\nA vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.(CVE-2020-14343)",
  "id": "OESA-2021-1257",
  "modified": "2025-09-03T06:16:58.943877Z",
  "published": "2021-07-03T11:03:02Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2021-1257"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-14343"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "PyYAML security update",
  "upstream": [
    "CVE-2020-14343"
  ]
}