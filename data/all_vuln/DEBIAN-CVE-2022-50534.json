{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-50534.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:11",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.10.178-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "5.10.103-1",
        "5.10.103-1~bpo10+1",
        "5.10.106-1",
        "5.10.113-1",
        "5.10.120-1",
        "5.10.120-1~bpo10+1",
        "5.10.127-1",
        "5.10.127-2",
        "5.10.127-2~bpo10+1",
        "5.10.136-1",
        "5.10.140-1",
        "5.10.148-1",
        "5.10.149-1",
        "5.10.149-2",
        "5.10.158-1",
        "5.10.158-2",
        "5.10.162-1",
        "5.10.46-4",
        "5.10.46-5",
        "5.10.70-1",
        "5.10.70-1~bpo10+1",
        "5.10.84-1",
        "5.10.92-1",
        "5.10.92-1~bpo10+1",
        "5.10.92-2"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-50534.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.4-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-50534.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.4-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-50534.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.4-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  dm thin: Use last transaction's pmd->root when commit failed  Recently we found a softlock up problem in dm thin pool btree lookup code due to corrupted metadata:   Kernel panic - not syncing: softlockup: hung tasks  CPU: 7 PID: 2669225 Comm: kworker/u16:3  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)  Workqueue: dm-thin do_worker [dm_thin_pool]  Call Trace:    <IRQ>    dump_stack+0x9c/0xd3    panic+0x35d/0x6b9    watchdog_timer_fn.cold+0x16/0x25    __run_hrtimer+0xa2/0x2d0    </IRQ>    RIP: 0010:__relink_lru+0x102/0x220 [dm_bufio]    __bufio_new+0x11f/0x4f0 [dm_bufio]    new_read+0xa3/0x1e0 [dm_bufio]    dm_bm_read_lock+0x33/0xd0 [dm_persistent_data]    ro_step+0x63/0x100 [dm_persistent_data]    btree_lookup_raw.constprop.0+0x44/0x220 [dm_persistent_data]    dm_btree_lookup+0x16f/0x210 [dm_persistent_data]    dm_thin_find_block+0x12c/0x210 [dm_thin_pool]    __process_bio_read_only+0xc5/0x400 [dm_thin_pool]    process_thin_deferred_bios+0x1a4/0x4a0 [dm_thin_pool]    process_one_work+0x3c5/0x730  Following process may generate a broken btree mixed with fresh and stale btree nodes, which could get dm thin trapped in an infinite loop while looking up data block:  Transaction 1: pmd->root = A, A->B->C   // One path in btree                 pmd->root = X, X->Y->Z   // Copy-up  Transaction 2: X,Z is updated on disk, Y write failed.                 // Commit failed, dm thin becomes read-only.                 process_bio_read_only \t\t dm_thin_find_block \t\t  __find_block \t\t   dm_btree_lookup(pmd->root) The pmd->root points to a broken btree, Y may contain stale node pointing to any block, for example X, which gets dm thin trapped into a dead loop while looking up Z.  Fix this by setting pmd->root in __open_metadata(), so that dm thin will use the last transaction's pmd->root if commit failed.  Fetch a reproducer in [Link].  Linke: https://bugzilla.kernel.org/show_bug.cgi?id=216790",
  "id": "DEBIAN-CVE-2022-50534",
  "modified": "2025-10-08T09:06:53.402585Z",
  "published": "2025-10-07T16:15:37Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2022-50534"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2022-50534"
  ]
}