{
  "affected": [
    {
      "database_specific": {
        "source": "https://repo.openeuler.org/security/data/osv/OESA-2024-1285.json"
      },
      "ecosystem_specific": {
        "aarch64": [
          "kernel-headers-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "kernel-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "kernel-debugsource-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "kernel-tools-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "kernel-source-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "python3-perf-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "kernel-tools-devel-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "kernel-tools-debuginfo-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "perf-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "kernel-devel-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "perf-debuginfo-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "kernel-debuginfo-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm",
          "python3-perf-debuginfo-5.10.0-153.46.0.124.oe2203sp2.aarch64.rpm"
        ],
        "src": [
          "kernel-5.10.0-153.46.0.124.oe2203sp2.src.rpm"
        ],
        "x86_64": [
          "perf-debuginfo-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "python3-perf-debuginfo-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-source-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-tools-devel-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-tools-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-devel-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-debuginfo-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-headers-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-debugsource-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "perf-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "kernel-tools-debuginfo-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm",
          "python3-perf-5.10.0-153.46.0.124.oe2203sp2.x86_64.rpm"
        ]
      },
      "package": {
        "ecosystem": "openEuler:22.03-LTS-SP2",
        "name": "kernel",
        "purl": "pkg:rpm/openEuler/kernel&distro=openEuler-22.03-LTS-SP2"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.10.0-153.46.0.124.oe2203sp2"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "database_specific": {
    "severity": "High"
  },
  "details": "The Linux Kernel, the operating system core itself.\r\n\r\nSecurity Fix(es):\r\n\r\nIn the Linux kernel, the following vulnerability has been resolved:\r\n\r\nf2fs: explicitly null-terminate the xattr list\r\n\r\nWhen setting an xattr, explicitly null-terminate the xattr list.  This\neliminates the fragile assumption that the unused xattr space is always\nzeroed.(CVE-2023-52436)\r\n\r\nIn the Linux kernel, the following vulnerability has been resolved:\r\n\r\nbinder: fix use-after-free in shinker&apos;s callback\r\n\r\nThe mmap read lock is used during the shrinker&apos;s callback, which means\nthat using alloc-&gt;vma pointer isn&apos;t safe as it can race with munmap().\nAs of commit dd2283f2605e (&quot;mm: mmap: zap pages with read mmap_sem in\nmunmap&quot;) the mmap lock is downgraded after the vma has been isolated.\r\n\r\nI was able to reproduce this issue by manually adding some delays and\ntriggering page reclaiming through the shrinker&apos;s debug sysfs. The\nfollowing KASAN report confirms the UAF:\r\n\r\n  ==================================================================\n  BUG: KASAN: slab-use-after-free in zap_page_range_single+0x470/0x4b8\n  Read of size 8 at addr ffff356ed50e50f0 by task bash/478\r\n\r\n  CPU: 1 PID: 478 Comm: bash Not tainted 6.6.0-rc5-00055-g1c8b86a3799f-dirty #70\n  Hardware name: linux,dummy-virt (DT)\n  Call trace:\n   zap_page_range_single+0x470/0x4b8\n   binder_alloc_free_page+0x608/0xadc\n   __list_lru_walk_one+0x130/0x3b0\n   list_lru_walk_node+0xc4/0x22c\n   binder_shrink_scan+0x108/0x1dc\n   shrinker_debugfs_scan_write+0x2b4/0x500\n   full_proxy_write+0xd4/0x140\n   vfs_write+0x1ac/0x758\n   ksys_write+0xf0/0x1dc\n   __arm64_sys_write+0x6c/0x9c\r\n\r\n  Allocated by task 492:\n   kmem_cache_alloc+0x130/0x368\n   vm_area_alloc+0x2c/0x190\n   mmap_region+0x258/0x18bc\n   do_mmap+0x694/0xa60\n   vm_mmap_pgoff+0x170/0x29c\n   ksys_mmap_pgoff+0x290/0x3a0\n   __arm64_sys_mmap+0xcc/0x144\r\n\r\n  Freed by task 491:\n   kmem_cache_free+0x17c/0x3c8\n   vm_area_free_rcu_cb+0x74/0x98\n   rcu_core+0xa38/0x26d4\n   rcu_core_si+0x10/0x1c\n   __do_softirq+0x2fc/0xd24\r\n\r\n  Last potentially related work creation:\n   __call_rcu_common.constprop.0+0x6c/0xba0\n   call_rcu+0x10/0x1c\n   vm_area_free+0x18/0x24\n   remove_vma+0xe4/0x118\n   do_vmi_align_munmap.isra.0+0x718/0xb5c\n   do_vmi_munmap+0xdc/0x1fc\n   __vm_munmap+0x10c/0x278\n   __arm64_sys_munmap+0x58/0x7c\r\n\r\nFix this issue by performing instead a vma_lookup() which will fail to\nfind the vma that was isolated before the mmap lock downgrade. Note that\nthis option has better performance than upgrading to a mmap write lock\nwhich would increase contention. Plus, mmap_write_trylock() has been\nrecently removed anyway.(CVE-2023-52438)\r\n\r\nIn the Linux kernel, the following vulnerability has been resolved:\r\n\r\nuio: Fix use-after-free in uio_open\r\n\r\ncore-1\t\t\t\tcore-2\n-------------------------------------------------------\nuio_unregister_device\t\tuio_open\n\t\t\t\tidev = idr_find()\ndevice_unregister(&amp;idev-&gt;dev)\nput_device(&amp;idev-&gt;dev)\nuio_device_release\n\t\t\t\tget_device(&amp;idev-&gt;dev)\nkfree(idev)\nuio_free_minor(minor)\n\t\t\t\tuio_release\n\t\t\t\tput_device(&amp;idev-&gt;dev)\n\t\t\t\tkfree(idev)\n-------------------------------------------------------\r\n\r\nIn the core-1 uio_unregister_device(), the device_unregister will kfree\nidev when the idev-&gt;dev kobject ref is 1. But after core-1\ndevice_unregister, put_device and before doing kfree, the core-2 may\nget_device. Then:\n1. After core-1 kfree idev, the core-2 will do use-after-free for idev.\n2. When core-2 do uio_release and put_device, the idev will be double\n   freed.\r\n\r\nTo address this issue, we can get idev atomic &amp; inc idev reference with\nminor_lock.(CVE-2023-52439)\r\n\r\nNULL Pointer Dereference vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (net, bluetooth modules) allows Overflow Buffers. This vulnerability is associated with program files /net/bluetooth/rfcomm/core.C.\r\n\r\nThis issue affects Linux kernel: v2.6.12-rc2.\r\n\r\n(CVE-2024-22099)\r\n\r\nIn btrfs_get_root_ref in fs/btrfs/disk-io.c in the Linux kernel through 6.7.1, there can be an assertion failure and crash because a subvolume can be read out too soon after its root item is inserted upon subvolume creation.(CVE-2024-23850)\r\n\r\ncopy_params in drivers/md/dm-ioctl.c in the Linux kernel through 6.7.1 can attempt to allocate more than INT_MAX bytes, and crash, because of a missing param_kernel-&gt;data_size check. This is related to ctl_ioctl.(CVE-2024-23851)\r\n\r\nIn the Linux kernel, the following vulnerability has been resolved:\r\n\r\ntls: fix race between async notify and socket close\r\n\r\nThe submitting thread (one which called recvmsg/sendmsg)\nmay exit as soon as the async crypto handler calls complete()\nso any code past that point risks touching already freed data.\r\n\r\nTry to avoid the locking and extra flags altogether.\nHave the main thread hold an extra reference, this way\nwe can depend solely on the atomic ref counter for\nsynchronization.\r\n\r\nDon&apos;t futz with reiniting the completion, either, we are now\ntightly controlling when completion fires.(CVE-2024-26583)",
  "id": "OESA-2024-1285",
  "modified": "2025-09-03T06:19:44.061772Z",
  "published": "2024-03-15T11:07:13Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2024-1285"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-52436"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-52438"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-52439"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-22099"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-23850"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-23851"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-26583"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "kernel security update",
  "upstream": [
    "CVE-2023-52436",
    "CVE-2023-52438",
    "CVE-2023-52439",
    "CVE-2024-22099",
    "CVE-2024-23850",
    "CVE-2024-23851",
    "CVE-2024-26583"
  ]
}