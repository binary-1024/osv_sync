{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-50253.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:11",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.10.178-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "5.10.103-1",
        "5.10.103-1~bpo10+1",
        "5.10.106-1",
        "5.10.113-1",
        "5.10.120-1",
        "5.10.120-1~bpo10+1",
        "5.10.127-1",
        "5.10.127-2",
        "5.10.127-2~bpo10+1",
        "5.10.136-1",
        "5.10.140-1",
        "5.10.148-1",
        "5.10.149-1",
        "5.10.149-2",
        "5.10.158-1",
        "5.10.158-2",
        "5.10.162-1",
        "5.10.46-4",
        "5.10.46-5",
        "5.10.70-1",
        "5.10.70-1~bpo10+1",
        "5.10.84-1",
        "5.10.92-1",
        "5.10.92-1~bpo10+1",
        "5.10.92-2"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-50253.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.4-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-50253.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.4-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-50253.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.4-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  bpf: make sure skb->len != 0 when redirecting to a tunneling device  syzkaller managed to trigger another case where skb->len == 0 when we enter __dev_queue_xmit:  WARNING: CPU: 0 PID: 2470 at include/linux/skbuff.h:2576 skb_assert_len include/linux/skbuff.h:2576 [inline] WARNING: CPU: 0 PID: 2470 at include/linux/skbuff.h:2576 __dev_queue_xmit+0x2069/0x35e0 net/core/dev.c:4295  Call Trace:  dev_queue_xmit+0x17/0x20 net/core/dev.c:4406  __bpf_tx_skb net/core/filter.c:2115 [inline]  __bpf_redirect_no_mac net/core/filter.c:2140 [inline]  __bpf_redirect+0x5fb/0xda0 net/core/filter.c:2163  ____bpf_clone_redirect net/core/filter.c:2447 [inline]  bpf_clone_redirect+0x247/0x390 net/core/filter.c:2419  bpf_prog_48159a89cb4a9a16+0x59/0x5e  bpf_dispatcher_nop_func include/linux/bpf.h:897 [inline]  __bpf_prog_run include/linux/filter.h:596 [inline]  bpf_prog_run include/linux/filter.h:603 [inline]  bpf_test_run+0x46c/0x890 net/bpf/test_run.c:402  bpf_prog_test_run_skb+0xbdc/0x14c0 net/bpf/test_run.c:1170  bpf_prog_test_run+0x345/0x3c0 kernel/bpf/syscall.c:3648  __sys_bpf+0x43a/0x6c0 kernel/bpf/syscall.c:5005  __do_sys_bpf kernel/bpf/syscall.c:5091 [inline]  __se_sys_bpf kernel/bpf/syscall.c:5089 [inline]  __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5089  do_syscall_64+0x54/0x70 arch/x86/entry/common.c:48  entry_SYSCALL_64_after_hwframe+0x61/0xc6  The reproducer doesn't really reproduce outside of syzkaller environment, so I'm taking a guess here. It looks like we do generate correct ETH_HLEN-sized packet, but we redirect the packet to the tunneling device. Before we do so, we __skb_pull l2 header and arrive again at skb->len == 0. Doesn't seem like we can do anything better than having an explicit check after __skb_pull?",
  "id": "DEBIAN-CVE-2022-50253",
  "modified": "2025-09-25T03:23:32.842930Z",
  "published": "2025-09-15T14:15:36Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2022-50253"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2022-50253"
  ]
}