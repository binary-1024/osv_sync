{
  "affected": [
    {
      "database_specific": {
        "categories": [],
        "cvss": null,
        "informational": "unsound",
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2024-0431.json"
      },
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [
            "xous::definitions::MemoryRange::as_slice",
            "xous::definitions::MemoryRange::as_slice_mut"
          ],
          "os": []
        }
      },
      "package": {
        "ecosystem": "crates.io",
        "name": "xous",
        "purl": "pkg:cargo/xous"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "0.9.51"
            }
          ],
          "type": "SEMVER"
        }
      ]
    }
  ],
  "database_specific": {
    "license": "CC0-1.0"
  },
  "details": "We consider `as_slice` and `as_slice_mut` unsound because: the pointer with any bit patterns could be cast to the slice of arbitrary types. The pointer could be created by unsafe new and deprecated `from_parts`. We consider that `from_parts` should be removed in latest version because it will help trigger unsoundness in `as_slice`. With new declared as unsafe, `as_slice` should also declared as unsafe.  \n\nThis was patched in by marking two functions as `unsafe`.",
  "id": "RUSTSEC-2024-0431",
  "modified": "2024-12-28T17:54:04Z",
  "published": "2024-12-23T12:00:00Z",
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/xous"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2024-0431.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/betrusted-io/xous-core/issues/410"
    },
    {
      "type": "WEB",
      "url": "https://github.com/betrusted-io/xous-core/pull/411"
    }
  ],
  "schema_version": "1.7.0",
  "summary": "Unsound usages of `core::slice::from_raw_parts`"
}