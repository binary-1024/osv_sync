{
  "affected": [
    {
      "database_specific": {
        "source": "https://repo.openeuler.org/security/data/osv/OESA-2025-2181.json"
      },
      "ecosystem_specific": {
        "aarch64": [
          "golang-1.21.4-35.oe2403sp1.aarch64.rpm"
        ],
        "noarch": [
          "golang-devel-1.21.4-35.oe2403sp1.noarch.rpm",
          "golang-help-1.21.4-35.oe2403sp1.noarch.rpm"
        ],
        "src": [
          "golang-1.21.4-35.oe2403sp1.src.rpm"
        ],
        "x86_64": [
          "golang-1.21.4-35.oe2403sp1.x86_64.rpm"
        ]
      },
      "package": {
        "ecosystem": "openEuler:24.03-LTS-SP1",
        "name": "golang",
        "purl": "pkg:rpm/openEuler/golang&distro=openEuler-24.03-LTS-SP1"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.21.4-35.oe2403sp1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "database_specific": {
    "severity": "High"
  },
  "details": ".\r\n\r\nSecurity Fix(es):\n\nThe go command may execute unexpected commands when operating in untrusted VCS repositories. This occurs when possibly dangerous VCS configuration is present in repositories. This can happen when a repository was fetched via one VCS (e.g. Git), but contains metadata for another VCS (e.g. Mercurial). Modules which are retrieved using the go command line, i.e. via &apos;go get&apos;, are not affected.(CVE-2025-4674)\n\nA vulnerability was found in Google Go up to 1.23.11/1.24.5 (Programming Language Software). It has been declared as problematic.The manipulation of the argument PATH with an unknown input leads to a unknown weakness.As an impact it is known to affect integrity.Upgrading to version 1.23.12 or 1.24.6 eliminates this vulnerability.(CVE-2025-47906)\n\nCancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.(CVE-2025-47907)",
  "id": "OESA-2025-2181",
  "modified": "2025-09-05T13:18:04.535751Z",
  "published": "2025-09-05T12:43:20Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2025-2181"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-4674"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-47906"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-47907"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "golang security update",
  "upstream": [
    "CVE-2025-4674",
    "CVE-2025-47906",
    "CVE-2025-47907"
  ]
}