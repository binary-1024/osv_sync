{
  "affected": [
    {
      "database_specific": {
        "categories": [
          "memory-corruption",
          "thread-safety"
        ],
        "cvss": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
        "informational": "unsound",
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2020-0097.json"
      },
      "ecosystem_specific": {
        "affected_functions": null,
        "affects": {
          "arch": [],
          "functions": [],
          "os": []
        }
      },
      "package": {
        "ecosystem": "crates.io",
        "name": "xcb",
        "purl": "pkg:cargo/xcb"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0.0.0-0"
            },
            {
              "fixed": "1.0.0"
            }
          ],
          "type": "SEMVER"
        }
      ]
    }
  ],
  "aliases": [
    "CVE-2020-36205",
    "GHSA-c8hq-x4mm-p6q6"
  ],
  "database_specific": {
    "license": "CC0-1.0"
  },
  "details": "`base::Error` type contains public field named `ptr`.\nWith this definition, it is possible to create a `base::Error` with an invalid pointer and trigger memory safety errors\nsuch as use-after-free or double-free with safe Rust.\n\nThe users of `xcb` crate are advised not to manipulate the field.",
  "id": "RUSTSEC-2020-0097",
  "modified": "2023-11-08T04:03:41.417539Z",
  "published": "2020-12-10T12:00:00Z",
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/xcb"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0097.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/rust-x-bindings/rust-xcb/issues/93"
    }
  ],
  "schema_version": "1.7.0",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
      "type": "CVSS_V3"
    }
  ],
  "summary": "Soundness issue with base::Error"
}