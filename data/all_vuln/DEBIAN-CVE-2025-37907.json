{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-37907.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.29-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-37907.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.29-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  accel/ivpu: Fix locking order in ivpu_job_submit  Fix deadlock in job submission and abort handling. When a thread aborts currently executing jobs due to a fault, it first locks the global lock protecting submitted_jobs (#1).  After the last job is destroyed, it proceeds to release the related context and locks file_priv (#2). Meanwhile, in the job submission thread, the file_priv lock (#2) is taken first, and then the submitted_jobs lock (#1) is obtained when a job is added to the submitted jobs list.         CPU0                            CPU1        ----                    \t       ----   (for example due to a fault)         (jobs submissions keep coming)    lock(&vdev->submitted_jobs_lock) #1   ivpu_jobs_abort_all()   job_destroy()                                       lock(&file_priv->lock)           #2                                       lock(&vdev->submitted_jobs_lock) #1   file_priv_release()   lock(&vdev->context_list_lock)   lock(&file_priv->lock)           #2  This order of locking causes a deadlock. To resolve this issue, change the order of locking in ivpu_job_submit().",
  "id": "DEBIAN-CVE-2025-37907",
  "modified": "2025-09-25T04:37:56.153158Z",
  "published": "2025-05-20T16:15:27Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2025-37907"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2025-37907"
  ]
}