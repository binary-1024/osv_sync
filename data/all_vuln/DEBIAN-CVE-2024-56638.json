{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-56638.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.5-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-56638.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.5-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  netfilter: nft_inner: incorrect percpu area handling under softirq  Softirq can interrupt ongoing packet from process context that is walking over the percpu area that contains inner header offsets.  Disable bh and perform three checks before restoring the percpu inner header offsets to validate that the percpu area is valid for this skbuff:  1) If the NFT_PKTINFO_INNER_FULL flag is set on, then this skbuff    has already been parsed before for inner header fetching to    register.  2) Validate that the percpu area refers to this skbuff using the    skbuff pointer as a cookie. If there is a cookie mismatch, then    this skbuff needs to be parsed again.  3) Finally, validate if the percpu area refers to this tunnel type.  Only after these three checks the percpu area is restored to a on-stack copy and bh is enabled again.  After inner header fetching, the on-stack copy is stored back to the percpu area.",
  "id": "DEBIAN-CVE-2024-56638",
  "modified": "2025-09-25T04:22:52.598589Z",
  "published": "2024-12-27T15:15:23Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2024-56638"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2024-56638"
  ]
}