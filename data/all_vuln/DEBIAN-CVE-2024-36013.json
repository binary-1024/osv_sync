{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-36013.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.8.11-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-36013.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.8.11-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  Bluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()  Extend a critical section to prevent chan from early freeing. Also make the l2cap_connect() return type void. Nothing is using the returned value but it is ugly to return a potentially freed pointer. Making it void will help with backports because earlier kernels did use the return value. Now the compile will break for kernels where this patch is not a complete fix.  Call stack summary:  [use] l2cap_bredr_sig_cmd   l2cap_connect   \u250c mutex_lock(&conn->chan_lock);   \u2502 chan = pchan->ops->new_connection(pchan); <- alloc chan   \u2502 __l2cap_chan_add(conn, chan);   \u2502   l2cap_chan_hold(chan);   \u2502   list_add(&chan->list, &conn->chan_l);   ... (1)   \u2514 mutex_unlock(&conn->chan_lock);     chan->conf_state              ... (4) <- use after free  [free] l2cap_conn_del \u250c mutex_lock(&conn->chan_lock); \u2502 foreach chan in conn->chan_l:            ... (2) \u2502   l2cap_chan_put(chan); \u2502     l2cap_chan_destroy \u2502       kfree(chan)               ... (3) <- chan freed \u2514 mutex_unlock(&conn->chan_lock);  ================================================================== BUG: KASAN: slab-use-after-free in instrument_atomic_read include/linux/instrumented.h:68 [inline] BUG: KASAN: slab-use-after-free in _test_bit include/asm-generic/bitops/instrumented-non-atomic.h:141 [inline] BUG: KASAN: slab-use-after-free in l2cap_connect+0xa67/0x11a0 net/bluetooth/l2cap_core.c:4260 Read of size 8 at addr ffff88810bf040a0 by task kworker/u3:1/311",
  "id": "DEBIAN-CVE-2024-36013",
  "modified": "2025-09-24T00:04:04Z",
  "published": "2024-05-23T07:15:08Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2024-36013"
    }
  ],
  "schema_version": "1.7.3"
}