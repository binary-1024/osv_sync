{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-21698.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:11",
        "name": "golang-github-prometheus-client-golang",
        "purl": "pkg:deb/debian/golang-github-prometheus-client-golang?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "1.11.0-1",
        "1.11.0-2",
        "1.11.0-3",
        "1.11.1-1",
        "1.11.1-1~bpo11+1",
        "1.12.2-1",
        "1.12.2-2",
        "1.12.2-3",
        "1.12.2-4",
        "1.13.0-1",
        "1.13.1-1",
        "1.14.0-1",
        "1.14.0-2",
        "1.14.0-3",
        "1.15.1-1",
        "1.15.1-2",
        "1.16.0-1",
        "1.16.0-2",
        "1.16.0-3",
        "1.16.0-4",
        "1.17.0-1",
        "1.17.0-2",
        "1.18.0-1",
        "1.18.0-2",
        "1.18.0-3",
        "1.19.0-1",
        "1.19.0-2",
        "1.19.1-1",
        "1.19.1-2",
        "1.20.0-1",
        "1.20.1-1",
        "1.20.2-1",
        "1.20.3-1",
        "1.20.3-2",
        "1.20.4-1",
        "1.20.5-1",
        "1.21.0-1",
        "1.21.1-1",
        "1.21.1-2~exp1",
        "1.23.0-1",
        "1.9.0-2"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-21698.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "golang-github-prometheus-client-golang",
        "purl": "pkg:deb/debian/golang-github-prometheus-client-golang?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.11.1-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-21698.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "golang-github-prometheus-client-golang",
        "purl": "pkg:deb/debian/golang-github-prometheus-client-golang?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.11.1-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-21698.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "golang-github-prometheus-client-golang",
        "purl": "pkg:deb/debian/golang-github-prometheus-client-golang?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.11.1-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.",
  "id": "DEBIAN-CVE-2022-21698",
  "modified": "2025-09-30T05:16:54.794360Z",
  "published": "2022-02-15T16:15:08Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2022-21698"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "type": "CVSS_V3"
    }
  ],
  "upstream": [
    "CVE-2022-21698"
  ]
}