{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-39296.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.9.7-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-39296.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.9.7-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  bonding: fix oops during rmmod  \"rmmod bonding\" causes an oops ever since commit cc317ea3d927 (\"bonding: remove redundant NULL check in debugfs function\").  Here are the relevant functions being called:  bonding_exit()   bond_destroy_debugfs()     debugfs_remove_recursive(bonding_debug_root);     bonding_debug_root = NULL; <--------- SET TO NULL HERE   bond_netlink_fini()     rtnl_link_unregister()       __rtnl_link_unregister()         unregister_netdevice_many_notify()           bond_uninit()             bond_debug_unregister()               (commit removed check for bonding_debug_root == NULL)               debugfs_remove()               simple_recursive_removal()                 down_write() -> OOPS  However, reverting the bad commit does not solve the problem completely because the original code contains a race that could cause the same oops, although it was much less likely to be triggered unintentionally:  CPU1   rmmod bonding     bonding_exit()       bond_destroy_debugfs()         debugfs_remove_recursive(bonding_debug_root);  CPU2   echo -bond0 > /sys/class/net/bonding_masters     bond_uninit()       bond_debug_unregister()         if (!bonding_debug_root)  CPU1         bonding_debug_root = NULL;  So do NOT revert the bad commit (since the removed checks were racy anyway), and instead change the order of actions taken during module removal.  The same oops can also happen if there is an error during module init, so apply the same fix there.",
  "id": "DEBIAN-CVE-2024-39296",
  "modified": "2025-09-30T03:54:28Z",
  "published": "2024-06-25T15:15:14Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2024-39296"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H",
      "type": "CVSS_V3"
    }
  ],
  "upstream": [
    "CVE-2024-39296"
  ]
}