{
  "affected": [
    {
      "database_specific": {
        "source": "https://repo.openeuler.org/security/data/osv/OESA-2025-2294.json"
      },
      "ecosystem_specific": {
        "aarch64": [
          "libssh-0.10.5-5.oe2403.aarch64.rpm",
          "libssh-debuginfo-0.10.5-5.oe2403.aarch64.rpm",
          "libssh-debugsource-0.10.5-5.oe2403.aarch64.rpm",
          "libssh-devel-0.10.5-5.oe2403.aarch64.rpm"
        ],
        "noarch": [
          "libssh-help-0.10.5-5.oe2403.noarch.rpm"
        ],
        "src": [
          "libssh-0.10.5-5.oe2403.src.rpm"
        ],
        "x86_64": [
          "libssh-0.10.5-5.oe2403.x86_64.rpm",
          "libssh-debuginfo-0.10.5-5.oe2403.x86_64.rpm",
          "libssh-debugsource-0.10.5-5.oe2403.x86_64.rpm",
          "libssh-devel-0.10.5-5.oe2403.x86_64.rpm"
        ]
      },
      "package": {
        "ecosystem": "openEuler:24.03-LTS",
        "name": "libssh",
        "purl": "pkg:rpm/openEuler/libssh&distro=openEuler-24.03-LTS"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.10.5-5.oe2403"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "database_specific": {
    "severity": "High"
  },
  "details": "The ssh library was designed to be used by programmers needing a working SSH implementation by the mean of a library. The complete control of the client is made by the programmer. With libssh, you can remotely execute programs, transfer files, use a secure and transparent tunnel for your remote programs. With its Secure FTP implementation, you can play with remote files easily, without third-party programs others than libcrypto (from openssl).\r\n\r\nSecurity Fix(es):\n\nThere&apos;s a vulnerability in the libssh package where when a libssh consumer passes in an unexpectedly large input buffer to ssh_get_fingerprint_hash() function. In such cases the bin_to_base64() function can experience an integer overflow leading to a memory under allocation, when that happens it&apos;s possible that the program perform out of bounds write leading to a heap corruption. This issue affects only 32-bits builds of libssh.(CVE-2025-4877)\n\nA vulnerability was found in libssh, where an uninitialized variable exists under certain conditions in the privatekey_from_file() function. This flaw can be triggered if the file specified by the filename doesn&apos;t exist and may lead to possible signing failures or heap corruption.(CVE-2025-4878)\n\nA flaw was found in the key export functionality of libssh. The issue occurs in the internal function responsible for converting cryptographic keys into serialized formats. During error handling, a memory structure is freed but not cleared, leading to a potential double free issue if an additional failure occurs later in the function. This condition may result in heap corruption or application instability in low-memory scenarios, posing a risk to system reliability where key export operations are performed.(CVE-2025-5351)\n\nA flaw was found in libssh versions built with OpenSSL versions older than 3.0, specifically in the ssh_kdf() function responsible for key derivation. Due to inconsistent interpretation of return values where OpenSSL uses 0 to indicate failure and libssh uses 0 for success\u2014the function may mistakenly return a success status even when key derivation fails. This results in uninitialized cryptographic key buffers being used in subsequent communication, potentially compromising SSH sessions&apos; confidentiality, integrity, and availability.(CVE-2025-5372)",
  "id": "OESA-2025-2294",
  "modified": "2025-09-12T19:01:04.545301Z",
  "published": "2025-09-12T14:26:31Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2025-2294"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-4877"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-4878"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-5351"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-5372"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "libssh security update",
  "upstream": [
    "CVE-2025-4877",
    "CVE-2025-4878",
    "CVE-2025-5351",
    "CVE-2025-5372"
  ]
}