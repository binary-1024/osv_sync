{
  "affected": [
    {
      "database_specific": {
        "source": "https://repo.openeuler.org/security/data/osv/OESA-2025-1529.json"
      },
      "ecosystem_specific": {
        "noarch": [
          "python-jinja2-help-3.0.3-7.oe2203sp3.noarch.rpm",
          "python3-jinja2-3.0.3-7.oe2203sp3.noarch.rpm"
        ],
        "src": [
          "python-jinja2-3.0.3-7.oe2203sp3.src.rpm"
        ]
      },
      "package": {
        "ecosystem": "openEuler:22.03-LTS-SP3",
        "name": "python-jinja2",
        "purl": "pkg:rpm/openEuler/python-jinja2&distro=openEuler-22.03-LTS-SP3"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "3.0.3-7.oe2203sp3"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "database_specific": {
    "severity": "High"
  },
  "details": "Jinja2 is one of the most used template engines for Python. It is inspired by Django&amp;apos;s templating system but extends it with an expressive language that gives template authors a more powerful set of tools. On top of that it adds sandboxed execution and optional automatic escaping for applications where security is important.\r\n\r\nSecurity Fix(es):\n\nJinja is an extensible templating engine. Prior to 3.1.6, an oversight in how the Jinja sandboxed environment interacts with the |attr filter allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja&apos;s sandbox does catch calls to str.format and ensures they don&apos;t escape the sandbox. However, it&apos;s possible to use the |attr filter to get a reference to a string&apos;s plain format method, bypassing the sandbox. After the fix, the |attr filter no longer bypasses the environment&apos;s attribute lookup. This vulnerability is fixed in 3.1.6.(CVE-2025-27516)",
  "id": "OESA-2025-1529",
  "modified": "2025-09-03T06:31:22.924343Z",
  "published": "2025-05-16T13:25:16Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://www.openeuler.org/zh/security/security-bulletins/detail/?id=openEuler-SA-2025-1529"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-27516"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "python-jinja2 security update",
  "upstream": [
    "CVE-2025-27516"
  ]
}