{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-49847.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "llama.cpp",
        "purl": "pkg:deb/debian/llama.cpp?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5713+dfsg-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "5151+dfsg-1~exp2",
        "5151+dfsg-1~exp3",
        "5318+dfsg-1",
        "5318+dfsg-2"
      ]
    }
  ],
  "details": "llama.cpp is an inference of several LLM models in C/C++. Prior to version b5662, an attacker\u2010supplied GGUF model vocabulary can trigger a buffer overflow in llama.cpp\u2019s vocabulary\u2010loading code. Specifically, the helper _try_copy in llama.cpp/src/vocab.cpp: llama_vocab::impl::token_to_piece() casts a very large size_t token length into an int32_t, causing the length check (if (length < (int32_t)size)) to be bypassed. As a result, memcpy is still called with that oversized size, letting a malicious model overwrite memory beyond the intended buffer. This can lead to arbitrary memory corruption and potential code execution. This issue has been patched in version b5662.",
  "id": "DEBIAN-CVE-2025-49847",
  "modified": "2025-09-25T04:47:38.617605Z",
  "published": "2025-06-17T20:15:32Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2025-49847"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2025-49847"
  ]
}