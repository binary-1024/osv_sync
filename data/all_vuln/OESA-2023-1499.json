{
  "affected": [
    {
      "database_specific": {
        "source": "https://repo.openeuler.org/security/data/osv/OESA-2023-1499.json"
      },
      "ecosystem_specific": {
        "aarch64": [
          "golang-1.17.3-20.oe2203sp2.aarch64.rpm"
        ],
        "noarch": [
          "golang-help-1.17.3-20.oe2203sp2.noarch.rpm",
          "golang-devel-1.17.3-20.oe2203sp2.noarch.rpm"
        ],
        "src": [
          "golang-1.17.3-20.oe2203sp2.src.rpm"
        ],
        "x86_64": [
          "golang-1.17.3-20.oe2203sp2.x86_64.rpm"
        ]
      },
      "package": {
        "ecosystem": "openEuler:22.03-LTS-SP2",
        "name": "golang",
        "purl": "pkg:rpm/openEuler/golang&distro=openEuler-22.03-LTS-SP2"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.17.3-20.oe2203sp2"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "database_specific": {
    "severity": "Critical"
  },
  "details": "The Go Programming Language.\r\n\r\nSecurity Fix(es):\r\n\r\nThe go command may execute arbitrary code at build time when using cgo. This may occur when running &quot;go get&quot; on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a &quot;#cgo LDFLAGS&quot; directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.(CVE-2023-29404)\r\n\r\nThe go command may execute arbitrary code at build time when using cgo. This may occur when running &quot;go get&quot; on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a &quot;#cgo LDFLAGS&quot; directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.(CVE-2023-29405)\r\n\r\nThe HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.(CVE-2023-29406)",
  "id": "OESA-2023-1499",
  "modified": "2025-09-03T06:19:07.286235Z",
  "published": "2023-08-12T11:05:40Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://www.openeuler.org/en/security/safety-bulletin/detail.html?id=openEuler-SA-2023-1499"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29404"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29405"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29406"
    }
  ],
  "schema_version": "1.7.3",
  "summary": "golang security update",
  "upstream": [
    "CVE-2023-29404",
    "CVE-2023-29405",
    "CVE-2023-29406"
  ]
}