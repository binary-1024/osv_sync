{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/android-osv/ASB-A-238904312.json"
      },
      "ecosystem_specific": {
        "severity": "High",
        "spl": "2022-09-05",
        "types": [
          "EoP"
        ]
      },
      "package": {
        "ecosystem": "Android",
        "name": ":unknown:"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "SoCVersion:0"
            },
            {
              "fixed": "SoCVersion:2022-09-05"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "SoCVersion"
      ]
    }
  ],
  "aliases": [
    "A-238904312",
    "CVE-2021-0942"
  ],
  "details": "The path in this case is a little bit convoluted. The end result is that via an ioctl an untrusted app can control the ui32PageIndex offset in the expression:\n        sPA.uiAddr = page_to_phys(psOSPageArrayData->pagearray[ui32PageIndex]);\nWith the current PoC this crashes as an OOB read. However, given that the OOB read value is ending up as the address field of a struct I think i seems plausible that this could lead to an OOB write if the attacker is able to cause the OOB read to pull an interesting kernel address. Regardless if this is a read or write, it is a High severity issue in the kernel.",
  "id": "ASB-A-238904312",
  "modified": "2025-09-11T14:57:02.413144Z",
  "published": "2022-09-01T00:00:00Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://source.android.com/security/bulletin/2022-09-01"
    }
  ],
  "schema_version": "1.7.3"
}