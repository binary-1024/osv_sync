{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-38154.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.147-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "6.1.106-1",
        "6.1.106-2",
        "6.1.106-3",
        "6.1.112-1",
        "6.1.115-1",
        "6.1.119-1",
        "6.1.123-1",
        "6.1.124-1",
        "6.1.128-1",
        "6.1.129-1",
        "6.1.133-1",
        "6.1.135-1",
        "6.1.137-1",
        "6.1.139-1",
        "6.1.140-1",
        "6.1.27-1",
        "6.1.37-1",
        "6.1.38-1",
        "6.1.38-2",
        "6.1.38-2~bpo11+1",
        "6.1.38-3",
        "6.1.38-4",
        "6.1.38-4~bpo11+1",
        "6.1.52-1",
        "6.1.55-1",
        "6.1.55-1~bpo11+1",
        "6.1.64-1",
        "6.1.66-1",
        "6.1.67-1",
        "6.1.69-1",
        "6.1.69-1~bpo11+1",
        "6.1.76-1",
        "6.1.76-1~bpo11+1",
        "6.1.82-1",
        "6.1.85-1",
        "6.1.90-1",
        "6.1.90-1~bpo11+1",
        "6.1.94-1",
        "6.1.94-1~bpo11+1",
        "6.1.98-1",
        "6.1.99-1"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-38154.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.35-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-38154.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.35-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  bpf, sockmap: Avoid using sk_socket after free when sending  The sk->sk_socket is not locked or referenced in backlog thread, and during the call to skb_send_sock(), there is a race condition with the release of sk_socket. All types of sockets(tcp/udp/unix/vsock) will be affected.  Race conditions: ''' CPU0                               CPU1  backlog::skb_send_sock   sendmsg_unlocked     sock_sendmsg       sock_sendmsg_nosec                                    close(fd):                                      ...                                      ops->release() -> sock_map_close()                                      sk_socket->ops = NULL                                      free(socket)       sock->ops->sendmsg             ^             panic here '''  The ref of psock become 0 after sock_map_close() executed. ''' void sock_map_close() {     ...     if (likely(psock)) {     ...     // !! here we remove psock and the ref of psock become 0     sock_map_remove_links(sk, psock)     psock = sk_psock_get(sk);     if (unlikely(!psock))         goto no_psock; <=== Control jumps here via goto         ...         cancel_delayed_work_sync(&psock->work); <=== not executed         sk_psock_put(sk, psock);         ... } '''  Based on the fact that we already wait for the workqueue to finish in sock_map_close() if psock is held, we simply increase the psock reference count to avoid race conditions.  With this patch, if the backlog thread is running, sock_map_close() will wait for the backlog thread to complete and cancel all pending work.  If no backlog running, any pending work that hasn't started by then will fail when invoked by sk_psock_get(), as the psock reference count have been zeroed, and sk_psock_drop() will cancel all jobs via cancel_delayed_work_sync().  In summary, we require synchronization to coordinate the backlog thread and close() thread.  The panic I catched: ''' Workqueue: events sk_psock_backlog RIP: 0010:sock_sendmsg+0x21d/0x440 RAX: 0000000000000000 RBX: ffffc9000521fad8 RCX: 0000000000000001 ... Call Trace:  <TASK>  ? die_addr+0x40/0xa0  ? exc_general_protection+0x14c/0x230  ? asm_exc_general_protection+0x26/0x30  ? sock_sendmsg+0x21d/0x440  ? sock_sendmsg+0x3e0/0x440  ? __pfx_sock_sendmsg+0x10/0x10  __skb_send_sock+0x543/0xb70  sk_psock_backlog+0x247/0xb80 ... '''",
  "id": "DEBIAN-CVE-2025-38154",
  "modified": "2025-09-25T04:39:47.390375Z",
  "published": "2025-07-03T09:15:30Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2025-38154"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2025-38154"
  ]
}