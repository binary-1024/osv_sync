{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2023-53149.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.3.7-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2023-53149.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.3.7-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  ext4: avoid deadlock in fs reclaim with page writeback  Ext4 has a filesystem wide lock protecting ext4_writepages() calls to avoid races with switching of journalled data flag or inode format. This lock can however cause a deadlock like:  CPU0                            CPU1  ext4_writepages()   percpu_down_read(sbi->s_writepages_rwsem);                                 ext4_change_inode_journal_flag()                                   percpu_down_write(sbi->s_writepages_rwsem);                                     - blocks, all readers block from now on   ext4_do_writepages()     ext4_init_io_end()       kmem_cache_zalloc(io_end_cachep, GFP_KERNEL)         fs_reclaim frees dentry...           dentry_unlink_inode()             iput() - last ref =>               iput_final() - inode dirty =>                 write_inode_now()...                   ext4_writepages() tries to acquire sbi->s_writepages_rwsem                     and blocks forever  Make sure we cannot recurse into filesystem reclaim from writeback code to avoid the deadlock.",
  "id": "DEBIAN-CVE-2023-53149",
  "modified": "2025-09-24T00:03:57Z",
  "published": "2025-09-15T14:15:37Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2023-53149"
    }
  ],
  "schema_version": "1.7.3"
}