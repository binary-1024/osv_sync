{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49708.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:11",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.10.127-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "5.10.103-1",
        "5.10.103-1~bpo10+1",
        "5.10.106-1",
        "5.10.113-1",
        "5.10.120-1",
        "5.10.120-1~bpo10+1",
        "5.10.46-4",
        "5.10.46-5",
        "5.10.70-1",
        "5.10.70-1~bpo10+1",
        "5.10.84-1",
        "5.10.92-1",
        "5.10.92-1~bpo10+1",
        "5.10.92-2"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49708.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.18.14-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49708.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.18.14-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49708.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.18.14-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  ext4: fix bug_on ext4_mb_use_inode_pa  Hulk Robot reported a BUG_ON: ================================================================== kernel BUG at fs/ext4/mballoc.c:3211! [...] RIP: 0010:ext4_mb_mark_diskspace_used.cold+0x85/0x136f [...] Call Trace:  ext4_mb_new_blocks+0x9df/0x5d30  ext4_ext_map_blocks+0x1803/0x4d80  ext4_map_blocks+0x3a4/0x1a10  ext4_writepages+0x126d/0x2c30  do_writepages+0x7f/0x1b0  __filemap_fdatawrite_range+0x285/0x3b0  file_write_and_wait_range+0xb1/0x140  ext4_sync_file+0x1aa/0xca0  vfs_fsync_range+0xfb/0x260  do_fsync+0x48/0xa0 [...] ==================================================================  Above issue may happen as follows: ------------------------------------- do_fsync  vfs_fsync_range   ext4_sync_file    file_write_and_wait_range     __filemap_fdatawrite_range      do_writepages       ext4_writepages        mpage_map_and_submit_extent         mpage_map_one_extent          ext4_map_blocks           ext4_mb_new_blocks            ext4_mb_normalize_request             >>> start + size <= ac->ac_o_ex.fe_logical            ext4_mb_regular_allocator             ext4_mb_simple_scan_group              ext4_mb_use_best_found               ext4_mb_new_preallocation                ext4_mb_new_inode_pa                 ext4_mb_use_inode_pa                  >>> set ac->ac_b_ex.fe_len <= 0            ext4_mb_mark_diskspace_used             >>> BUG_ON(ac->ac_b_ex.fe_len <= 0);  we can easily reproduce this problem with the following commands: \t`fallocate -l100M disk` \t`mkfs.ext4 -b 1024 -g 256 disk` \t`mount disk /mnt` \t`fsstress -d /mnt -l 0 -n 1000 -p 1`  The size must be smaller than or equal to EXT4_BLOCKS_PER_GROUP. Therefore, \"start + size <= ac->ac_o_ex.fe_logical\" may occur when the size is truncated. So start should be the start position of the group where ac_o_ex.fe_logical is located after alignment. In addition, when the value of fe_logical or EXT4_BLOCKS_PER_GROUP is very large, the value calculated by start_off is more accurate.",
  "id": "DEBIAN-CVE-2022-49708",
  "modified": "2025-09-25T03:19:12.072123Z",
  "published": "2025-02-26T07:01:46Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2022-49708"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2022-49708"
  ]
}