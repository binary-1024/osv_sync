{
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemcg: protect concurrent access to mem_cgroup_idr\n\nCommit 73f576c04b94 (\"mm: memcontrol: fix cgroup creation failure after\nmany small jobs\") decoupled the memcg IDs from the CSS ID space to fix the\ncgroup creation failures.  It introduced IDR to maintain the memcg ID\nspace.  The IDR depends on external synchronization mechanisms for\nmodifications.  For the mem_cgroup_idr, the idr_alloc() and idr_replace()\nhappen within css callback and thus are protected through cgroup_mutex\nfrom concurrent modifications.  However idr_remove() for mem_cgroup_idr\nwas not protected against concurrency and can be run concurrently for\ndifferent memcgs when they hit their refcnt to zero.  Fix that.\n\nWe have been seeing list_lru based kernel crashes at a low frequency in\nour fleet for a long time.  These crashes were in different part of\nlist_lru code including list_lru_add(), list_lru_del() and reparenting\ncode.  Upon further inspection, it looked like for a given object (dentry\nand inode), the super_block's list_lru didn't have list_lru_one for the\nmemcg of that object.  The initial suspicions were either the object is\nnot allocated through kmem_cache_alloc_lru() or somehow\nmemcg_list_lru_alloc() failed to allocate list_lru_one() for a memcg but\nreturned success.  No evidence were found for these cases.\n\nLooking more deeply, we started seeing situations where valid memcg's id\nis not present in mem_cgroup_idr and in some cases multiple valid memcgs\nhave same id and mem_cgroup_idr is pointing to one of them.  So, the most\nreasonable explanation is that these situations can happen due to race\nbetween multiple idr_remove() calls or race between\nidr_alloc()/idr_replace() and idr_remove().  These races are causing\nmultiple memcgs to acquire the same ID and then offlining of one of them\nwould cleanup list_lrus on the system for all of them.  Later access from\nother memcgs to the list_lru cause crashes due to missing list_lru_one.",
  "id": "CVE-2024-43892",
  "modified": "2025-08-09T19:01:27Z",
  "published": "2024-08-26T11:15:04Z",
  "references": [
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/37a060b64ae83b76600d187d76591ce488ab836b"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/51c0b1bb7541f8893ec1accba59eb04361a70946"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/9972605a238339b85bd16b084eed5f18414d22db"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/56fd70f4aa8b82199dbe7e99366b1fd7a04d86fb"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/912736a0435ef40e6a4ae78197ccb5553cb80b05"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/e6cc9ff2ac0b5df9f25eb790934c3104f6710278"
    }
  ],
  "related": [
    "ALSA-2024:8856",
    "ALSA-2024:8870",
    "MGASA-2024-0309",
    "MGASA-2024-0310",
    "RLSA-2024:8856",
    "RLSA-2024:8870",
    "SUSE-SU-2024:3189-1",
    "SUSE-SU-2024:3190-1",
    "SUSE-SU-2024:3194-1",
    "SUSE-SU-2024:3195-1",
    "SUSE-SU-2024:3209-1",
    "SUSE-SU-2024:3251-1",
    "SUSE-SU-2024:3252-1",
    "SUSE-SU-2024:3383-1",
    "SUSE-SU-2024:3483-1"
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H",
      "type": "CVSS_V3"
    }
  ]
}