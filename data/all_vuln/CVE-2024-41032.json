{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/cve-osv-conversion/osv-output/CVE-2024-41032.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.9.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: vmalloc: check if a hash-index is in cpu_possible_mask\n\nThe problem is that there are systems where cpu_possible_mask has gaps\nbetween set CPUs, for example SPARC.  In this scenario addr_to_vb_xa()\nhash function can return an index which accesses to not-possible and not\nsetup CPU area using per_cpu() macro.  This results in an oops on SPARC.\n\nA per-cpu vmap_block_queue is also used as hash table, incorrectly\nassuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index\nto a next possible CPU.",
  "id": "CVE-2024-41032",
  "modified": "2024-11-21T09:32:06Z",
  "published": "2024-07-29T15:15:11Z",
  "references": [
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/28acd531c9a365dac01b32e6bc54aed8c1429bcb"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/47f9b6e49b422392fb0e348a65eb925103ba1882"
    },
    {
      "type": "WEB",
      "url": "https://git.kernel.org/stable/c/a34acf30b19bc4ee3ba2f1082756ea2604c19138"
    },
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2024-41032"
    }
  ],
  "related": [
    "MGASA-2024-0277",
    "MGASA-2024-0278",
    "SUSE-SU-2024:3194-1",
    "SUSE-SU-2024:3195-1",
    "SUSE-SU-2024:3383-1"
  ],
  "schema_version": "1.6.0"
}