{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2023-53387.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.20-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2023-53387.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.20-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2023-53387.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.1.20-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  scsi: ufs: core: Fix device management cmd timeout flow  In the UFS error handling flow, the host will send a device management cmd (NOP OUT) to the device for link recovery. If this cmd times out and clearing the doorbell fails, ufshcd_wait_for_dev_cmd() will do nothing and return. hba->dev_cmd.complete struct is not set to NULL.  When this happens, if cmd has been completed by device, then we will call complete() in __ufshcd_transfer_req_compl(). Because the complete struct is allocated on the stack, the following crash will occur:    ipanic_die+0x24/0x38 [mrdump]   die+0x344/0x748   arm64_notify_die+0x44/0x104   do_debug_exception+0x104/0x1e0   el1_dbg+0x38/0x54   el1_sync_handler+0x40/0x88   el1_sync+0x8c/0x140   queued_spin_lock_slowpath+0x2e4/0x3c0   __ufshcd_transfer_req_compl+0x3b0/0x1164   ufshcd_trc_handler+0x15c/0x308   ufshcd_host_reset_and_restore+0x54/0x260   ufshcd_reset_and_restore+0x28c/0x57c   ufshcd_err_handler+0xeb8/0x1b6c   process_one_work+0x288/0x964   worker_thread+0x4bc/0xc7c   kthread+0x15c/0x264   ret_from_fork+0x10/0x30",
  "id": "DEBIAN-CVE-2023-53387",
  "modified": "2025-09-24T00:03:46Z",
  "published": "2025-09-18T14:15:41Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2023-53387"
    }
  ],
  "schema_version": "1.7.3"
}