{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-39950.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "6.12.38-1",
        "6.12.41-1",
        "6.12.43-1",
        "6.12.43-1~bpo12+1",
        "6.12.48-1",
        "6.13.10-1~exp1",
        "6.13.11-1~exp1",
        "6.13.2-1~exp1",
        "6.13.3-1~exp1",
        "6.13.4-1~exp1",
        "6.13.5-1~exp1",
        "6.13.6-1~exp1",
        "6.13.7-1~exp1",
        "6.13.8-1~exp1",
        "6.13.9-1~exp1",
        "6.13~rc6-1~exp1",
        "6.13~rc7-1~exp1",
        "6.14.3-1~exp1",
        "6.14.5-1~exp1",
        "6.14.6-1~exp1",
        "6.15-1~exp1",
        "6.15.1-1~exp1",
        "6.15.2-1~exp1",
        "6.15.3-1~exp1",
        "6.15.4-1~exp1",
        "6.15.5-1~exp1",
        "6.15.6-1~exp1",
        "6.15~rc7-1~exp1",
        "6.16-1~exp1",
        "6.16.1-1~exp1",
        "6.16.3-1",
        "6.16.3-1~bpo13+1",
        "6.16.5-1",
        "6.16.6-1",
        "6.16.7-1",
        "6.16.8-1",
        "6.16.9-1",
        "6.16~rc7-1~exp1"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-39950.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.16.9-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "6.12.38-1",
        "6.12.41-1",
        "6.12.43-1",
        "6.12.43-1~bpo12+1",
        "6.12.48-1",
        "6.13.10-1~exp1",
        "6.13.11-1~exp1",
        "6.13.2-1~exp1",
        "6.13.3-1~exp1",
        "6.13.4-1~exp1",
        "6.13.5-1~exp1",
        "6.13.6-1~exp1",
        "6.13.7-1~exp1",
        "6.13.8-1~exp1",
        "6.13.9-1~exp1",
        "6.13~rc6-1~exp1",
        "6.13~rc7-1~exp1",
        "6.14.3-1~exp1",
        "6.14.5-1~exp1",
        "6.14.6-1~exp1",
        "6.15-1~exp1",
        "6.15.1-1~exp1",
        "6.15.2-1~exp1",
        "6.15.3-1~exp1",
        "6.15.4-1~exp1",
        "6.15.5-1~exp1",
        "6.15.6-1~exp1",
        "6.15~rc7-1~exp1",
        "6.16-1~exp1",
        "6.16.1-1~exp1",
        "6.16.3-1",
        "6.16.3-1~bpo13+1",
        "6.16.5-1",
        "6.16.6-1",
        "6.16.7-1",
        "6.16.8-1",
        "6.16~rc7-1~exp1"
      ]
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  net/tcp: Fix a NULL pointer dereference when using TCP-AO with TCP_REPAIR  A NULL pointer dereference can occur in tcp_ao_finish_connect() during a connect() system call on a socket with a TCP-AO key added and TCP_REPAIR enabled.  The function is called with skb being NULL and attempts to dereference it on tcp_hdr(skb)->seq without a prior skb validation.  Fix this by checking if skb is NULL before dereferencing it.  The commentary is taken from bpf_skops_established(), which is also called in the same flow. Unlike the function being patched, bpf_skops_established() validates the skb before dereferencing it.  int main(void){ \tstruct sockaddr_in sockaddr; \tstruct tcp_ao_add tcp_ao; \tint sk; \tint one = 1;  \tmemset(&sockaddr,'\\0',sizeof(sockaddr)); \tmemset(&tcp_ao,'\\0',sizeof(tcp_ao));  \tsk = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);  \tsockaddr.sin_family = AF_INET;  \tmemcpy(tcp_ao.alg_name,\"cmac(aes128)\",12); \tmemcpy(tcp_ao.key,\"ABCDEFGHABCDEFGH\",16); \ttcp_ao.keylen = 16;  \tmemcpy(&tcp_ao.addr,&sockaddr,sizeof(sockaddr));  \tsetsockopt(sk, IPPROTO_TCP, TCP_AO_ADD_KEY, &tcp_ao, \tsizeof(tcp_ao)); \tsetsockopt(sk, IPPROTO_TCP, TCP_REPAIR, &one, sizeof(one));  \tsockaddr.sin_family = AF_INET; \tsockaddr.sin_port = htobe16(123);  \tinet_aton(\"127.0.0.1\", &sockaddr.sin_addr);  \tconnect(sk,(struct sockaddr *)&sockaddr,sizeof(sockaddr));  return 0; }  $ gcc tcp-ao-nullptr.c -o tcp-ao-nullptr -Wall $ unshare -Urn  BUG: kernel NULL pointer dereference, address: 00000000000000b6 PGD 1f648d067 P4D 1f648d067 PUD 1982e8067 PMD 0 Oops: Oops: 0000 [#1] SMP NOPTI Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 11/12/2020 RIP: 0010:tcp_ao_finish_connect (net/ipv4/tcp_ao.c:1182)",
  "id": "DEBIAN-CVE-2025-39950",
  "modified": "2025-10-05T08:09:17.659530Z",
  "published": "2025-10-04T08:15:48Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2025-39950"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2025-39950"
  ]
}