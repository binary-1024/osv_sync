{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2025-39904.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.16.8-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "6.12.38-1",
        "6.12.41-1",
        "6.12.43-1",
        "6.12.43-1~bpo12+1",
        "6.12.48-1",
        "6.13.10-1~exp1",
        "6.13.11-1~exp1",
        "6.13.2-1~exp1",
        "6.13.3-1~exp1",
        "6.13.4-1~exp1",
        "6.13.5-1~exp1",
        "6.13.6-1~exp1",
        "6.13.7-1~exp1",
        "6.13.8-1~exp1",
        "6.13.9-1~exp1",
        "6.13~rc6-1~exp1",
        "6.13~rc7-1~exp1",
        "6.14.3-1~exp1",
        "6.14.5-1~exp1",
        "6.14.6-1~exp1",
        "6.15-1~exp1",
        "6.15.1-1~exp1",
        "6.15.2-1~exp1",
        "6.15.3-1~exp1",
        "6.15.4-1~exp1",
        "6.15.5-1~exp1",
        "6.15.6-1~exp1",
        "6.15~rc7-1~exp1",
        "6.16-1~exp1",
        "6.16.1-1~exp1",
        "6.16.3-1",
        "6.16.3-1~bpo13+1",
        "6.16.5-1",
        "6.16.6-1",
        "6.16.7-1",
        "6.16~rc7-1~exp1"
      ]
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  arm64: kexec: initialize kexec_buf struct in load_other_segments()  Patch series \"kexec: Fix invalid field access\".  The kexec_buf structure was previously declared without initialization.  commit bf454ec31add (\"kexec_file: allow to place kexec_buf randomly\") added a field that is always read but not consistently populated by all architectures.  This un-initialized field will contain garbage.  This is also triggering a UBSAN warning when the uninitialized data was accessed:  \t------------[ cut here ]------------ \tUBSAN: invalid-load in ./include/linux/kexec.h:210:10 \tload of value 252 is not a valid value for type '_Bool'  Zero-initializing kexec_buf at declaration ensures all fields are cleanly set, preventing future instances of uninitialized memory being used.  An initial fix was already landed for arm64[0], and this patchset fixes the problem on the remaining arm64 code and on riscv, as raised by Mark.  Discussions about this problem could be found at[1][2].   This patch (of 3):  The kexec_buf structure was previously declared without initialization. commit bf454ec31add (\"kexec_file: allow to place kexec_buf randomly\") added a field that is always read but not consistently populated by all architectures. This un-initialized field will contain garbage.  This is also triggering a UBSAN warning when the uninitialized data was accessed:  \t------------[ cut here ]------------ \tUBSAN: invalid-load in ./include/linux/kexec.h:210:10 \tload of value 252 is not a valid value for type '_Bool'  Zero-initializing kexec_buf at declaration ensures all fields are cleanly set, preventing future instances of uninitialized memory being used.",
  "id": "DEBIAN-CVE-2025-39904",
  "modified": "2025-10-02T09:25:46.229045Z",
  "published": "2025-10-01T08:15:33Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2025-39904"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2025-39904"
  ]
}