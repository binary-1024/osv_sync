{
  "affected": [
    {
      "database_specific": {
        "source": "https://advisories.mageia.org/MGASA-2019-0173.json"
      },
      "ecosystem_specific": {
        "section": "nonfree"
      },
      "package": {
        "ecosystem": "Mageia:6",
        "name": "microcode",
        "purl": "pkg:rpm/mageia/microcode?arch=source&distro=mageia-6"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.20190514-1.mga6.nonfree"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "credits": [
    {
      "contact": [
        "https://wiki.mageia.org/en/Packages_Security_Team"
      ],
      "name": "Mageia",
      "type": "COORDINATOR"
    }
  ],
  "details": "This update provides the Intel 20190514 microcode release that adds the\nmicrocode side mitigations for the Microarchitectural Data Sampling (MDS,\nalso called ZombieLoad attack) vulnerabilities in Intel processors that\ncan allow attackers to retrieve data being processed inside a CPU.\n\nThe fixed / mitigated issues are:\n\nModern Intel microprocessors implement hardware-level micro-optimizations\nto improve the performance of writing data back to CPU caches. The write\noperation is split into STA (STore Address) and STD (STore Data)\nsub-operations. These sub-operations allow the processor to hand-off\naddress generation logic into these sub-operations for optimized writes.\nBoth of these sub-operations write to a shared distributed processor\nstructure called the 'processor store buffer'. As a result, an\nunprivileged attacker could use this flaw to read private data resident\nwithin the CPU's processor store buffer. (CVE-2018-12126)\n\nMicroprocessors use a \u2018load port\u2019 subcomponent to perform load operations\nfrom memory or IO. During a load operation, the load port receives data\nfrom the memory or IO subsystem and then provides the data to the CPU\nregisters and operations in the CPU\u2019s pipelines. Stale load operations\nresults are stored in the 'load port' table until overwritten by newer\noperations. Certain load-port operations triggered by an attacker can be\nused to reveal data about previous stale requests leaking data back to the\nattacker via a timing side-channel. (CVE-2018-12127)\n\nA flaw was found in the implementation of the \"fill buffer\", a mechanism\nused by modern CPUs when a cache-miss is made on L1 CPU cache. If an\nattacker can generate a load operation that would create a page fault,\nthe execution will continue speculatively with incorrect data from the\nfill buffer while the data is fetched from higher level caches. This\nresponse time can be measured to infer data in the fill buffer.\n(CVE-2018-12130)\n\nUncacheable memory on some microprocessors utilizing speculative execution\nmay allow an authenticated user to potentially enable information disclosure\nvia a side channel with local access. (CVE-2019-11091) \n",
  "id": "MGASA-2019-0173",
  "modified": "2019-05-16T07:49:20Z",
  "published": "2019-05-16T08:25:22Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://advisories.mageia.org/MGASA-2019-0173.html"
    },
    {
      "type": "REPORT",
      "url": "https://bugs.mageia.org/show_bug.cgi?id=24800"
    },
    {
      "type": "REPORT",
      "url": "https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/mds.html"
    }
  ],
  "related": [
    "CVE-2018-12126",
    "CVE-2018-12127",
    "CVE-2018-12130",
    "CVE-2019-11091"
  ],
  "schema_version": "1.6.0",
  "summary": "Updated microcode packages fix security vulnerabilities"
}