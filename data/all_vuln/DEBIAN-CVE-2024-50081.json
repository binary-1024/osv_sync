{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-50081.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.11.5-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-50081.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.11.5-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  blk-mq: setup queue ->tag_set before initializing hctx  Commit 7b815817aa58 (\"blk-mq: add helper for checking if one CPU is mapped to specified hctx\") needs to check queue mapping via tag set in hctx's cpuhp handler.  However, q->tag_set may not be setup yet when the cpuhp handler is enabled, then kernel oops is triggered.  Fix the issue by setup queue tag_set before initializing hctx.",
  "id": "DEBIAN-CVE-2024-50081",
  "modified": "2025-09-24T00:03:52Z",
  "published": "2024-10-29T01:15:05Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2024-50081"
    }
  ],
  "schema_version": "1.7.3"
}