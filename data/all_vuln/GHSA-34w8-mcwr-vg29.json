{
  "affected": [
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-34w8-mcwr-vg29/GHSA-34w8-mcwr-vg29.json"
      },
      "package": {
        "ecosystem": "npm",
        "name": "codeceptjs",
        "purl": "pkg:npm/codeceptjs"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "3.5.0"
            },
            {
              "fixed": "3.7.5"
            }
          ],
          "type": "SEMVER"
        }
      ]
    }
  ],
  "aliases": [
    "CVE-2025-57285"
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-77"
    ],
    "github_reviewed": true,
    "github_reviewed_at": "2025-09-10T17:11:21Z",
    "nvd_published_at": "2025-09-08T18:15:34Z",
    "severity": "CRITICAL"
  },
  "details": "CodeceptJS versions 3.5.0 through 3.7.5-beta.18 contain a command injection vulnerability in the emptyFolder function (lib/utils.js). The execSync command directly concatenates the user-controlled directoryPath parameter without sanitization or escaping, allowing attackers to execute arbitrary commands.",
  "id": "GHSA-34w8-mcwr-vg29",
  "modified": "2025-09-23T20:19:25Z",
  "published": "2025-09-08T18:31:42Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-57285"
    },
    {
      "type": "WEB",
      "url": "https://github.com/codeceptjs/CodeceptJS/pull/3604"
    },
    {
      "type": "WEB",
      "url": "https://github.com/codeceptjs/CodeceptJS/pull/5190"
    },
    {
      "type": "WEB",
      "url": "https://gist.github.com/Dremig/1ba111f9b1f7cffe1fcb4838b64e55b9"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/codeceptjs/CodeceptJS"
    },
    {
      "type": "WEB",
      "url": "https://www.npmjs.com"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "type": "CVSS_V3"
    }
  ],
  "summary": "CodeceptJS's incomprehensive sanitation can lead to Command Injection"
}