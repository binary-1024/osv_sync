{
  "affected": [
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/01/GHSA-8655-xgh5-5vvq/GHSA-8655-xgh5-5vvq.json"
      },
      "package": {
        "ecosystem": "crates.io",
        "name": "fast-float",
        "purl": "pkg:cargo/fast-float"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "last_affected": "0.2.0"
            }
          ],
          "type": "SEMVER"
        }
      ]
    }
  ],
  "database_specific": {
    "cwe_ids": [],
    "github_reviewed": true,
    "github_reviewed_at": "2025-01-29T22:21:17Z",
    "nvd_published_at": null,
    "severity": "MODERATE"
  },
  "details": "In this case, the \"fast_float::common::AsciiStr::first\" method within the \"AsciiStr\" struct \nuses the unsafe keyword to reading from memory without performing bounds checking. \nSpecifically, it directly dereferences a pointer offset by \"self.ptr\".\nBecause of the above reason, the method accesses invalid memory address when it takes an empty string as its input.\nThis approach violates Rust\u2019s memory safety guarantees, as it can lead to invalid memory access if empty buffer is provided.\n\nNo patched version for fast-float crate has been released, but a patch is available in the fast-float2 fork.\n",
  "id": "GHSA-8655-xgh5-5vvq",
  "modified": "2025-01-29T22:21:18Z",
  "published": "2025-01-29T22:21:17Z",
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/aldanor/fast-float-rust/issues/38"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/aldanor/fast-float-rust"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2025-0003.html"
    }
  ],
  "related": [
    "CGA-7696-frvp-3xp7"
  ],
  "schema_version": "1.7.0",
  "summary": "fast-fault has a segmentation fault due to lack of bound check"
}