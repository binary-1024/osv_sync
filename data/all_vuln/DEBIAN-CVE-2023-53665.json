{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2023-53665.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.5.6-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2023-53665.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.5.6-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  md: don't dereference mddev after export_rdev()  Except for initial reference, mddev->kobject is referenced by rdev->kobject, and if the last rdev is freed, there is no guarantee that mddev is still valid. Hence mddev should not be used anymore after export_rdev().  This problem can be triggered by following test for mdadm at very low rate:  New file: mdadm/tests/23rdev-lifetime  devname=${dev0##*/} devt=`cat /sys/block/$devname/dev` pid=\"\" runtime=2  clean_up_test() {         pill -9 $pid         echo clear > /sys/block/md0/md/array_state }  trap 'clean_up_test' EXIT  add_by_sysfs() {         while true; do                 echo $devt > /sys/block/md0/md/new_dev         done }  remove_by_sysfs(){         while true; do                 echo remove > /sys/block/md0/md/dev-${devname}/state         done }  echo md0 > /sys/module/md_mod/parameters/new_array || die \"create md0 failed\"  add_by_sysfs & pid=\"$pid $!\"  remove_by_sysfs & pid=\"$pid $!\"  sleep $runtime exit 0  Test cmd:  ./test --save-logs --logdir=/tmp/ --keep-going --dev=loop --tests=23rdev-lifetime  Test result:  general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6bcb: 0000 [#4] PREEMPT SMP CPU: 0 PID: 1292 Comm: test Tainted: G      D W          6.5.0-rc2-00121-g01e55c376936 #562 RIP: 0010:md_wakeup_thread+0x9e/0x320 [md_mod] Call Trace:  <TASK>  mddev_unlock+0x1b6/0x310 [md_mod]  rdev_attr_store+0xec/0x190 [md_mod]  sysfs_kf_write+0x52/0x70  kernfs_fop_write_iter+0x19a/0x2a0  vfs_write+0x3b5/0x770  ksys_write+0x74/0x150  __x64_sys_write+0x22/0x30  do_syscall_64+0x40/0x90  entry_SYSCALL_64_after_hwframe+0x63/0xcd  Fix this problem by don't dereference mddev after export_rdev().",
  "id": "DEBIAN-CVE-2023-53665",
  "modified": "2025-10-08T09:01:17Z",
  "published": "2025-10-07T16:15:50Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2023-53665"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2023-53665"
  ]
}