{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49778.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49778.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49778.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  arm64/mm: fix incorrect file_map_count for non-leaf pmd/pud  The page table check trigger BUG_ON() unexpectedly when collapse hugepage:   ------------[ cut here ]------------  kernel BUG at mm/page_table_check.c:82!  Internal error: Oops - BUG: 00000000f2000800 [#1] SMP  Dumping ftrace buffer:     (ftrace buffer empty)  Modules linked in:  CPU: 6 PID: 68 Comm: khugepaged Not tainted 6.1.0-rc3+ #750  Hardware name: linux,dummy-virt (DT)  pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)  pc : page_table_check_clear.isra.0+0x258/0x3f0  lr : page_table_check_clear.isra.0+0x240/0x3f0 [...]  Call trace:   page_table_check_clear.isra.0+0x258/0x3f0   __page_table_check_pmd_clear+0xbc/0x108   pmdp_collapse_flush+0xb0/0x160   collapse_huge_page+0xa08/0x1080   hpage_collapse_scan_pmd+0xf30/0x1590   khugepaged_scan_mm_slot.constprop.0+0x52c/0xac8   khugepaged+0x338/0x518   kthread+0x278/0x2f8   ret_from_fork+0x10/0x20 [...]  Since pmd_user_accessible_page() doesn't check if a pmd is leaf, it decrease file_map_count for a non-leaf pmd comes from collapse_huge_page(). and so trigger BUG_ON() unexpectedly.  Fix this problem by using pmd_leaf() insteal of pmd_present() in pmd_user_accessible_page(). Moreover, use pud_leaf() for pud_user_accessible_page() too.",
  "id": "DEBIAN-CVE-2022-49778",
  "modified": "2025-09-24T00:03:57Z",
  "published": "2025-05-01T15:16:00Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2022-49778"
    }
  ],
  "schema_version": "1.7.3"
}