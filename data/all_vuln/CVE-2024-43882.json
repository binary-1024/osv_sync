{
  "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nexec: Fix ToCToU between perm check and set-uid/gid usage\n\nWhen opening a file for exec via do_filp_open(), permission checking is\ndone against the file's metadata at that moment, and on success, a file\npointer is passed back. Much later in the execve() code path, the file\nmetadata (specifically mode, uid, and gid) is used to determine if/how\nto set the uid and gid. However, those values may have changed since the\npermissions check, meaning the execution may gain unintended privileges.\n\nFor example, if a file could change permissions from executable and not\nset-id:\n\n---------x 1 root root 16048 Aug  7 13:16 target\n\nto set-id and non-executable:\n\n---S------ 1 root root 16048 Aug  7 13:16 target\n\nit is possible to gain root privileges when execution should have been\ndisallowed.\n\nWhile this race condition is rare in real-world scenarios, it has been\nobserved (and proven exploitable) when package managers are updating\nthe setuid bits of installed programs. Such files start with being\nworld-executable but then are adjusted to be group-exec with a set-uid\nbit. For example, \"chmod o-x,u+s target\" makes \"target\" executable only\nby uid \"root\" and gid \"cdrom\", while also becoming setuid-root:\n\n-rwxr-xr-x 1 root cdrom 16048 Aug  7 13:16 target\n\nbecomes:\n\n-rwsr-xr-- 1 root cdrom 16048 Aug  7 13:16 target\n\nBut racing the chmod means users without group \"cdrom\" membership can\nget the permission to execute \"target\" just before the chmod, and when\nthe chmod finishes, the exec reaches brpm_fill_uid(), and performs the\nsetuid to root, violating the expressed authorization of \"only cdrom\ngroup members can setuid to root\".\n\nRe-check that we still have execute permissions in case the metadata\nhas changed. It would be better to keep a copy from the perm-check time,\nbut until we can do that refactoring, the least-bad option is to do a\nfull inode_permission() call (under inode lock). It is understood that\nthis is safe against dead-locks, but hardly optimal.",
  "id": "CVE-2024-43882",
  "modified": "2025-08-09T19:01:27Z",
  "published": "2024-08-21T01:15:12Z",
  "references": [
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/15469d46ba34559bfe7e3de6659115778c624759"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/368f6985d46657b8b466a421dddcacd4051f7ada"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/90dfbba89ad4f0d9c9744ecbb1adac4aa2ff4f3e"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/9b424c5d4130d56312e2a3be17efb0928fec4d64"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/d2a2a4714d80d09b0f8eb6438ab4224690b7121e"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/d5c3c7e26275a2d83b894d30f7582a42853a958f"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/f50733b45d865f91db90919f8311e2127ce5a0cb"
    },
    {
      "type": "FIX",
      "url": "https://git.kernel.org/stable/c/f6cfc6bcfd5e1cf76115b6450516ea4c99897ae1"
    }
  ],
  "related": [
    "MGASA-2024-0309",
    "MGASA-2024-0310",
    "SUSE-SU-2024:3189-1",
    "SUSE-SU-2024:3190-1",
    "SUSE-SU-2024:3194-1",
    "SUSE-SU-2024:3195-1",
    "SUSE-SU-2024:3209-1",
    "SUSE-SU-2024:3225-1",
    "SUSE-SU-2024:3227-1",
    "SUSE-SU-2024:3249-1",
    "SUSE-SU-2024:3251-1",
    "SUSE-SU-2024:3252-1",
    "SUSE-SU-2024:3383-1",
    "SUSE-SU-2024:3408-1",
    "SUSE-SU-2024:3467-1",
    "SUSE-SU-2024:3483-1",
    "SUSE-SU-2024:3499-1",
    "SUSE-SU-2025:01590-1",
    "SUSE-SU-2025:01601-1",
    "SUSE-SU-2025:01610-1",
    "SUSE-SU-2025:01668-1",
    "SUSE-SU-2025:01675-1",
    "SUSE-SU-2025:01676-1",
    "SUSE-SU-2025:01683-1"
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "type": "CVSS_V3"
    }
  ]
}