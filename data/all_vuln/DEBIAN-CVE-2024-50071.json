{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-50071.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.11.5-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-50071.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.11.5-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  pinctrl: nuvoton: fix a double free in ma35_pinctrl_dt_node_to_map_func()  'new_map' is allocated using devm_* which takes care of freeing the allocated data on device removal, call to  \t.dt_free_map = pinconf_generic_dt_free_map  double frees the map as pinconf_generic_dt_free_map() calls pinctrl_utils_free_map().  Fix this by using kcalloc() instead of auto-managed devm_kcalloc().",
  "id": "DEBIAN-CVE-2024-50071",
  "modified": "2025-09-25T04:16:46.020097Z",
  "published": "2024-10-29T01:15:04Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2024-50071"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2024-50071"
  ]
}