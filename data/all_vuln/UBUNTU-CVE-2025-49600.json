{
  "affected": [
    {
      "database_specific": {
        "source": "https://github.com/canonical/ubuntu-security-notices/blob/main/osv/cve/2025/UBUNTU-CVE-2025-49600.json"
      },
      "ecosystem_specific": {
        "binaries": [
          {
            "binary_name": "libmbedcrypto16",
            "binary_version": "3.6.2-3ubuntu1"
          },
          {
            "binary_name": "libmbedtls-dev",
            "binary_version": "3.6.2-3ubuntu1"
          },
          {
            "binary_name": "libmbedtls21",
            "binary_version": "3.6.2-3ubuntu1"
          },
          {
            "binary_name": "libmbedx509-7",
            "binary_version": "3.6.2-3ubuntu1"
          }
        ]
      },
      "package": {
        "ecosystem": "Ubuntu:25.04",
        "name": "mbedtls",
        "purl": "pkg:deb/ubuntu/mbedtls@3.6.2-3ubuntu1?arch=source&distro=plucky"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "2.28.8-1",
        "3.6.2-1ubuntu4",
        "3.6.2-2ubuntu1",
        "3.6.2-3ubuntu1"
      ]
    }
  ],
  "details": "In MbedTLS 3.3.0 before 3.6.4, mbedtls_lms_verify may accept invalid signatures if hash computation fails and internal errors go unchecked, enabling LMS (Leighton-Micali Signature) forgery in a fault scenario. Specifically, unchecked return values in mbedtls_lms_verify allow an attacker (who can induce a hardware hash accelerator fault) to bypass LMS signature verification by reusing stale stack data, resulting in acceptance of an invalid signature. In mbedtls_lms_verify, the return values of the internal Merkle tree functions create_merkle_leaf_value and create_merkle_internal_value are not checked. These functions return an integer that indicates whether the call succeeded or not. If a failure occurs, the output buffer (Tc_candidate_root_node) may remain uninitialized, and the result of the signature verification is unpredictable. When the software implementation of SHA-256 is used, these functions will not fail. However, with hardware-accelerated hashing, an attacker could use fault injection against the accelerator to bypass verification.",
  "id": "UBUNTU-CVE-2025-49600",
  "modified": "2025-10-09T05:16:55Z",
  "published": "2025-07-04T15:15:00Z",
  "references": [
    {
      "type": "REPORT",
      "url": "https://ubuntu.com/security/CVE-2025-49600"
    },
    {
      "type": "REPORT",
      "url": "https://www.cve.org/CVERecord?id=CVE-2025-49600"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/Mbed-TLS/mbedtls-docs/blob/main/security-advisories/mbedtls-security-advisory-2025-06-3.md"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:P/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N",
      "type": "CVSS_V3"
    },
    {
      "score": "medium",
      "type": "Ubuntu"
    }
  ],
  "upstream": [
    "CVE-2025-49600"
  ]
}