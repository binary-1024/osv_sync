{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49764.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49764.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49764.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  bpf: Prevent bpf program recursion for raw tracepoint probes  We got report from sysbot [1] about warnings that were caused by bpf program attached to contention_begin raw tracepoint triggering the same tracepoint by using bpf_trace_printk helper that takes trace_printk_lock lock.   Call Trace:   <TASK>   ? trace_event_raw_event_bpf_trace_printk+0x5f/0x90   bpf_trace_printk+0x2b/0xe0   bpf_prog_a9aec6167c091eef_prog+0x1f/0x24   bpf_trace_run2+0x26/0x90   native_queued_spin_lock_slowpath+0x1c6/0x2b0   _raw_spin_lock_irqsave+0x44/0x50   bpf_trace_printk+0x3f/0xe0   bpf_prog_a9aec6167c091eef_prog+0x1f/0x24   bpf_trace_run2+0x26/0x90   native_queued_spin_lock_slowpath+0x1c6/0x2b0   _raw_spin_lock_irqsave+0x44/0x50   bpf_trace_printk+0x3f/0xe0   bpf_prog_a9aec6167c091eef_prog+0x1f/0x24   bpf_trace_run2+0x26/0x90   native_queued_spin_lock_slowpath+0x1c6/0x2b0   _raw_spin_lock_irqsave+0x44/0x50   bpf_trace_printk+0x3f/0xe0   bpf_prog_a9aec6167c091eef_prog+0x1f/0x24   bpf_trace_run2+0x26/0x90   native_queued_spin_lock_slowpath+0x1c6/0x2b0   _raw_spin_lock_irqsave+0x44/0x50   __unfreeze_partials+0x5b/0x160   ...  The can be reproduced by attaching bpf program as raw tracepoint on contention_begin tracepoint. The bpf prog calls bpf_trace_printk helper. Then by running perf bench the spin lock code is forced to take slow path and call contention_begin tracepoint.  Fixing this by skipping execution of the bpf program if it's already running, Using bpf prog 'active' field, which is being currently used by trampoline programs for the same reason.  Moving bpf_prog_inc_misses_counter to syscall.c because trampoline.c is compiled in just for CONFIG_BPF_JIT option.  [1] https://lore.kernel.org/bpf/YxhFe3EwqchC%2FfYf@krava/T/#t",
  "id": "DEBIAN-CVE-2022-49764",
  "modified": "2025-09-24T00:04:00Z",
  "published": "2025-05-01T15:15:59Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2022-49764"
    }
  ],
  "schema_version": "1.7.3"
}