{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49840.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:11",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "5.10.158-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": [
        "5.10.103-1",
        "5.10.103-1~bpo10+1",
        "5.10.106-1",
        "5.10.113-1",
        "5.10.120-1",
        "5.10.120-1~bpo10+1",
        "5.10.127-1",
        "5.10.127-2",
        "5.10.127-2~bpo10+1",
        "5.10.136-1",
        "5.10.140-1",
        "5.10.148-1",
        "5.10.149-1",
        "5.10.149-2",
        "5.10.46-4",
        "5.10.46-5",
        "5.10.70-1",
        "5.10.70-1~bpo10+1",
        "5.10.84-1",
        "5.10.92-1",
        "5.10.92-1~bpo10+1",
        "5.10.92-2"
      ]
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49840.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:12",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49840.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2022-49840.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.10-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  bpf, test_run: Fix alignment problem in bpf_prog_test_run_skb()  We got a syzkaller problem because of aarch64 alignment fault if KFENCE enabled. When the size from user bpf program is an odd number, like 399, 407, etc, it will cause the struct skb_shared_info's unaligned access. As seen below:    BUG: KFENCE: use-after-free read in __skb_clone+0x23c/0x2a0 net/core/skbuff.c:1032    Use-after-free read at 0xffff6254fffac077 (in kfence-#213):    __lse_atomic_add arch/arm64/include/asm/atomic_lse.h:26 [inline]    arch_atomic_add arch/arm64/include/asm/atomic.h:28 [inline]    arch_atomic_inc include/linux/atomic-arch-fallback.h:270 [inline]    atomic_inc include/asm-generic/atomic-instrumented.h:241 [inline]    __skb_clone+0x23c/0x2a0 net/core/skbuff.c:1032    skb_clone+0xf4/0x214 net/core/skbuff.c:1481    ____bpf_clone_redirect net/core/filter.c:2433 [inline]    bpf_clone_redirect+0x78/0x1c0 net/core/filter.c:2420    bpf_prog_d3839dd9068ceb51+0x80/0x330    bpf_dispatcher_nop_func include/linux/bpf.h:728 [inline]    bpf_test_run+0x3c0/0x6c0 net/bpf/test_run.c:53    bpf_prog_test_run_skb+0x638/0xa7c net/bpf/test_run.c:594    bpf_prog_test_run kernel/bpf/syscall.c:3148 [inline]    __do_sys_bpf kernel/bpf/syscall.c:4441 [inline]    __se_sys_bpf+0xad0/0x1634 kernel/bpf/syscall.c:4381    kfence-#213: 0xffff6254fffac000-0xffff6254fffac196, size=407, cache=kmalloc-512    allocated by task 15074 on cpu 0 at 1342.585390s:    kmalloc include/linux/slab.h:568 [inline]    kzalloc include/linux/slab.h:675 [inline]    bpf_test_init.isra.0+0xac/0x290 net/bpf/test_run.c:191    bpf_prog_test_run_skb+0x11c/0xa7c net/bpf/test_run.c:512    bpf_prog_test_run kernel/bpf/syscall.c:3148 [inline]    __do_sys_bpf kernel/bpf/syscall.c:4441 [inline]    __se_sys_bpf+0xad0/0x1634 kernel/bpf/syscall.c:4381    __arm64_sys_bpf+0x50/0x60 kernel/bpf/syscall.c:4381  To fix the problem, we adjust @size so that (@size + @hearoom) is a multiple of SMP_CACHE_BYTES. So we make sure the struct skb_shared_info is aligned to a cache line.",
  "id": "DEBIAN-CVE-2022-49840",
  "modified": "2025-09-30T05:17:31.478655Z",
  "published": "2025-05-01T15:16:07Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2022-49840"
    }
  ],
  "schema_version": "1.7.3",
  "severity": [
    {
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "type": "CVSS_V3"
    }
  ],
  "upstream": [
    "CVE-2022-49840"
  ]
}