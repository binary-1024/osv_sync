{
  "affected": [
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-58060.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:13",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.13-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    },
    {
      "database_specific": {
        "source": "https://storage.googleapis.com/debian-osv/debian-cve-osv/DEBIAN-CVE-2024-58060.json"
      },
      "ecosystem_specific": {
        "urgency": "not yet assigned"
      },
      "package": {
        "ecosystem": "Debian:14",
        "name": "linux",
        "purl": "pkg:deb/debian/linux?arch=source"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.12.13-1"
            }
          ],
          "type": "ECOSYSTEM"
        }
      ],
      "versions": []
    }
  ],
  "details": "In the Linux kernel, the following vulnerability has been resolved:  bpf: Reject struct_ops registration that uses module ptr and the module btf_id is missing  There is a UAF report in the bpf_struct_ops when CONFIG_MODULES=n. In particular, the report is on tcp_congestion_ops that has a \"struct module *owner\" member.  For struct_ops that has a \"struct module *owner\" member, it can be extended either by the regular kernel module or by the bpf_struct_ops. bpf_try_module_get() will be used to do the refcounting and different refcount is done based on the owner pointer. When CONFIG_MODULES=n, the btf_id of the \"struct module\" is missing:  WARN: resolve_btfids: unresolved symbol module  Thus, the bpf_try_module_get() cannot do the correct refcounting.  Not all subsystem's struct_ops requires the \"struct module *owner\" member. e.g. the recent sched_ext_ops.  This patch is to disable bpf_struct_ops registration if the struct_ops has the \"struct module *\" member and the \"struct module\" btf_id is missing. The btf_type_is_fwd() helper is moved to the btf.h header file for this test.  This has happened since the beginning of bpf_struct_ops which has gone through many changes. The Fixes tag is set to a recent commit that this patch can apply cleanly. Considering CONFIG_MODULES=n is not common and the age of the issue, targeting for bpf-next also.",
  "id": "DEBIAN-CVE-2024-58060",
  "modified": "2025-09-25T04:25:48.997660Z",
  "published": "2025-03-06T16:15:52Z",
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://security-tracker.debian.org/tracker/CVE-2024-58060"
    }
  ],
  "schema_version": "1.7.3",
  "upstream": [
    "CVE-2024-58060"
  ]
}