{
  "affected": [
    {
      "database_specific": {
        "source": "https://curl.se/docs/CURL-CVE-2014-8151.json"
      },
      "ranges": [
        {
          "events": [
            {
              "introduced": "7.31.0"
            },
            {
              "fixed": "7.40.0"
            }
          ],
          "type": "SEMVER"
        }
      ],
      "versions": [
        "7.39.0",
        "7.38.0",
        "7.37.1",
        "7.37.0",
        "7.36.0",
        "7.35.0",
        "7.34.0",
        "7.33.0",
        "7.32.0",
        "7.31.0"
      ]
    }
  ],
  "aliases": [
    "CVE-2014-8151"
  ],
  "credits": [
    {
      "name": "Marc Hesse at RethinkDB",
      "type": "FINDER"
    },
    {
      "name": "Daniel Stenberg",
      "type": "REMEDIATION_DEVELOPER"
    }
  ],
  "database_specific": {
    "CWE": {
      "desc": "Improper Validation of Certificate with Host Mismatch",
      "id": "CWE-297"
    },
    "URL": "https://curl.se/docs/CVE-2014-8151.json",
    "affects": "both",
    "last_affected": "7.39.0",
    "package": "curl",
    "severity": "Medium",
    "www": "https://curl.se/docs/CVE-2014-8151.html"
  },
  "details": "libcurl stores TLS Session IDs in its associated Session ID cache when it\nconnects to TLS servers. In subsequent connects it re-uses the entry in the\ncache to resume the TLS connection faster than when doing a full TLS\nhandshake. The actual implementation for the Session ID caching varies\ndepending on the underlying TLS backend.\n\nlibcurl allows applications to switch off certificate verification in two\ndifferent ways - using `CURLOPT_SSL_VERIFYHOST` and `CURLOPT_SSL_VERIFYPEER`.\n\nWhen an application connected to a TLS server with certificate verification\ndisabled, it would store the Session ID in the cache and if then a subsequent\nconnection was made against the same host and port number, it would re-use the\nformer session and thanks to the the re-used session from the cache, it would\nskip the certificate check and wrongly accept any bad certificate that could\nbe presented.\n\nThe problem was that the \"key\" used for caching Session IDs did not take the\ncertificate check status into account.\n\nThis problem is specific to libcurl built to use the Secure Transport backend\nfor TLS, so it can only affect Mac and iPhone based applications.",
  "id": "CURL-CVE-2014-8151",
  "modified": "2024-06-07T13:53:51Z",
  "published": "2015-01-08T08:00:00Z",
  "schema_version": "1.6.0",
  "summary": "Secure Transport certificate check bypass"
}